{
  "createTime": 1710181947590,
  "updateTime": 1710235241482,
  "name": "rule_detail_child_workflow",
  "description": "Rule Detail Child Workflow",
  "version": 1,
  "tasks": [
    {
      "name": "Read Timeout Child",
      "taskReferenceName": "read_timeout_child_ref",
      "inputParameters": {
        "expression": "(function(){ return Math.floor($.s / 2) })();",
        "evaluatorType": "javascript",
        "s": "${workflow.input.read_timeout}"
      },
      "type": "INLINE"
    },
    {
      "name": "Crawler HTTP Stream",
      "taskReferenceName": "crawler_http_stream_ref",
      "inputParameters": {
        "http_request": {
          "uri": "https://monitorai.ba.cnr.it/crawler/crawl",
          "body": "{\"crawlingMode\": \"${workflow.input.crawling_mode}\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":false,\"url\": \"${workflow.input.resultURL}\"}",
          "method": "POST",
          "connectionTimeOut": "${workflow.input.connection_timeout}",
          "readTimeOut": "${read_timeout_child_ref.output.result}"
        }
      },
      "type": "HTTP",
      "decisionCases": {},
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": true,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "onStateChange": {}
    },
    {
      "name": "Switch Crawler HTTP Stream Completed",
      "taskReferenceName": "switch_crawler_http_stream_completed_ref",
      "inputParameters": {
        "switchCaseValue": "${crawler_http_stream_ref.status}"
      },
      "type": "SWITCH",
      "decisionCases": {
        "COMPLETED": [
          {
            "name": "Switch Crawler HTTP Stream",
            "taskReferenceName": "switch_crawler_http_stream_ref",
            "inputParameters": {
              "switchCaseValue": "${crawler_http_stream_ref.output.response.body.result}"
            },
            "type": "SWITCH",
            "decisionCases": {
              "200": [
                {
                  "name": "Rule HTTP Stream",
                  "taskReferenceName": "rule_http_stream_ref",
                  "inputParameters": {
                    "http_request": {
                      "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules/child?ruleName=${workflow.input.rule_name}",
                      "body": "${crawler_http_stream_ref.output.response.body.htmlPage}",
                      "method": "POST",
                      "connectionTimeOut": 1000,
                      "readTimeOut": 5000
                    }
                  },
                  "type": "HTTP",
                  "decisionCases": {},
                  "defaultCase": [],
                  "forkTasks": [],
                  "startDelay": 0,
                  "joinOn": [],
                  "optional": true,
                  "defaultExclusiveJoinTask": [],
                  "asyncComplete": false,
                  "loopOver": [],
                  "onStateChange": {}
                },
                {
                  "name": "Switch Rule HTTP Stream",
                  "taskReferenceName": "switch_rule_http_stream_ref",
                  "inputParameters": {
                    "switchCaseValue": "${rule_http_stream_ref.status}"
                  },
                  "type": "SWITCH",
                  "decisionCases": {
                    "COMPLETED_WITH_ERRORS": [
                      {
                        "name": "Crawler HTML Source",
                        "taskReferenceName": "crawler_html_source_ref",
                        "inputParameters": {
                          "http_request": {
                            "uri": "https://monitorai.ba.cnr.it/crawler/crawl",
                            "body": "{\"crawlingMode\": \"htmlSource\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":${workflow.input.crawler_save_screenshot},\"url\": \"${workflow.input.resultURL}\"}",
                            "method": "POST",
                            "connectionTimeOut": "${workflow.input.connection_timeout}",
                            "readTimeOut": "${read_timeout_child_ref.output.result}"
                          }
                        },
                        "type": "HTTP",
                        "decisionCases": {},
                        "defaultCase": [],
                        "forkTasks": [],
                        "startDelay": 0,
                        "joinOn": [],
                        "optional": true,
                        "defaultExclusiveJoinTask": [],
                        "asyncComplete": false,
                        "loopOver": [],
                        "onStateChange": {}
                      },
                      {
                        "name": "Switch Crawler HTML Source",
                        "taskReferenceName": "switch_crawler_html_source_ref",
                        "inputParameters": {
                          "switchCaseValue": "${crawler_html_source_ref.output.response.body.result}"
                        },
                        "type": "SWITCH",
                        "decisionCases": {
                          "200": [
                            {
                              "name": "Rule HTML Source",
                              "taskReferenceName": "rule_html_source_ref",
                              "inputParameters": {
                                "http_request": {
                                  "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules/child?ruleName=${workflow.input.rule_name}",
                                  "body": "${crawler_html_source_ref.output.response.body.htmlPage}",
                                  "method": "POST",
                                  "connectionTimeOut": 1000,
                                  "readTimeOut": 1000
                                }
                              },
                              "type": "HTTP",
                              "decisionCases": {},
                              "defaultCase": [],
                              "forkTasks": [],
                              "startDelay": 0,
                              "joinOn": [],
                              "optional": true,
                              "defaultExclusiveJoinTask": [],
                              "asyncComplete": false,
                              "loopOver": [],
                              "onStateChange": {}
                            },
                            {
                              "name": "Switch Rule HTML Source",
                              "taskReferenceName": "switch_rule_html_source_ref",
                              "inputParameters": {
                                "switchCaseValue": "${rule_html_source_ref.status}"
                              },
                              "type": "SWITCH",
                              "decisionCases": {
                                "COMPLETED_WITH_ERRORS": [
                                  {
                                    "name": "Company JQ HTML Source Failed",
                                    "taskReferenceName": "company_jq_html_source_failed_ref",
                                    "inputParameters": {
                                      "id": "${workflow.input.ipa.idResult}",
                                      "idIpa": "${workflow.input.ipa.id}",
                                      "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                      "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                      "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                      "tipologia": "${workflow.input.ipa.tipologia}",
                                      "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                      "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                      "acronimo": "${workflow.input.ipa.acronimo}",
                                      "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                      "sorgente": "${workflow.input.ipa.sorgente}",
                                      "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                      "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                      "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                      "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                      "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                      "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                      "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                      "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                      "workflow_child_id": "${workflow.workflowId}",
                                      "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                      "length": "${crawler_html_source_ref.output.response.body.length}",
                                      "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 400, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }",
                                      "ruleName": "${workflow.input.rule_name}/child"
                                    },
                                    "type": "JSON_JQ_TRANSFORM",
                                    "decisionCases": {},
                                    "defaultCase": [],
                                    "forkTasks": [],
                                    "startDelay": 0,
                                    "joinOn": [],
                                    "optional": true,
                                    "defaultExclusiveJoinTask": [],
                                    "asyncComplete": false,
                                    "loopOver": [],
                                    "onStateChange": {}
                                  },
                                  {
                                    "name": "Result Rule HTML Source Failed",
                                    "taskReferenceName": "result_rule_html_source_failed_ref",
                                    "inputParameters": {
                                      "http_request": {
                                        "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                        "body": "${company_jq_html_source_failed_ref.output.result}",
                                        "method": "PUT",
                                        "connectionTimeOut": 10000,
                                        "readTimeOut": 120000
                                      }
                                    },
                                    "type": "HTTP",
                                    "optional": true,
                                    "asyncComplete": false
                                  },
                                  {
                                    "name": "Terminate Rule HTML Source Failed",
                                    "taskReferenceName": "terminate_rule_html_source_failed_ref",
                                    "inputParameters": {
                                      "terminationStatus": "COMPLETED"
                                    },
                                    "type": "TERMINATE",
                                    "decisionCases": {},
                                    "defaultCase": [],
                                    "forkTasks": [],
                                    "startDelay": 0,
                                    "joinOn": [],
                                    "optional": false,
                                    "defaultExclusiveJoinTask": [],
                                    "asyncComplete": false,
                                    "loopOver": [],
                                    "onStateChange": {}
                                  }
                                ],
                                "COMPLETED": [
                                  {
                                    "name": "Company JQ HTML Source Completed",
                                    "taskReferenceName": "company_jq_html_source_completed_ref",
                                    "inputParameters": {
                                      "id": "${workflow.input.ipa.idResult}",
                                      "idIpa": "${workflow.input.ipa.id}",
                                      "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                      "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                      "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                      "tipologia": "${workflow.input.ipa.tipologia}",
                                      "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                      "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                      "acronimo": "${workflow.input.ipa.acronimo}",
                                      "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                      "sorgente": "${workflow.input.ipa.sorgente}",
                                      "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                      "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                      "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                      "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                      "screenshotId": "${crawler_html_source_ref.output.response.body.screenshotId}",
                                      "screenshotResult": "${crawler_html_source_ref.output.response.body.screenshotResult}",
                                      "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                      "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                      "workflow_child_id": "${workflow.workflowId}",
                                      "length": "${crawler_html_source_ref.output.response.body.length}",
                                      "resultRuleCreateDtos": "${rule_html_source_ref.output.response.body}",
                                      "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, resultRuleCreateDtos: .resultRuleCreateDtos, realUrl: .realUrl, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length }"
                                    },
                                    "type": "JSON_JQ_TRANSFORM",
                                    "decisionCases": {},
                                    "defaultCase": [],
                                    "forkTasks": [],
                                    "startDelay": 0,
                                    "joinOn": [],
                                    "optional": true,
                                    "defaultExclusiveJoinTask": [],
                                    "asyncComplete": false,
                                    "loopOver": [],
                                    "onStateChange": {}
                                  },
                                  {
                                    "name": "Result Rule HTML Source Completed",
                                    "taskReferenceName": "result_rule_html_source_completed_ref",
                                    "inputParameters": {
                                      "http_request": {
                                        "uri": "${workflow.input.result_base_url}/result-service/v1/results/bulk",
                                        "body": "${company_jq_html_source_completed_ref.output.result}",
                                        "method": "PUT",
                                        "connectionTimeOut": 10000,
                                        "readTimeOut": 120000
                                      }
                                    },
                                    "type": "HTTP",
                                    "optional": true,
                                    "asyncComplete": false
                                  },
                                  {
                                    "name": "Result JQ HTML Source Completed Filter",
                                    "taskReferenceName": "result_jq_html_source_completed_filter_ref",
                                    "inputParameters": {
                                      "results": "${result_rule_html_source_completed_ref.output.response.body}",
                                      "queryExpression": "[.results[] | select (.leaf == false and (.status == 200 or .status == 202))]"
                                    },
                                    "type": "JSON_JQ_TRANSFORM"
                                  },
                                  {
                                    "name": "HTML Source Leaf",
                                    "taskReferenceName": "html_source_leaf_ref",
                                    "inputParameters": {
                                      "expression": "(function(){ if ($.s > 0){return true;} else { return false;} })();",
                                      "evaluatorType": "javascript",
                                      "s": "${result_jq_html_source_completed_filter_ref.output.result.length()}"
                                    },
                                    "type": "INLINE"
                                  },                                  
                                  {
                                    "name": "SWITCH HTML Source Leaf",
                                    "taskReferenceName": "switch_html_source_leaf_ref",
                                    "inputParameters": {
                                      "exists": "${html_source_leaf_ref.output.result}"
                                    },
                                    "type": "SWITCH",
                                    "decisionCases": {
                                      "true": [
                                        {
                                          "name": "DO While HTML Source Rule",
                                          "taskReferenceName": "do_while_htmlsource_rule_ref",
                                          "inputParameters": {
                                            "rule_count": "${result_jq_html_source_completed_filter_ref.output.result.length()}"
                                          },
                                          "type": "DO_WHILE",
                                          "decisionCases": {},
                                          "defaultCase": [],
                                          "forkTasks": [],
                                          "startDelay": 0,
                                          "joinOn": [],
                                          "optional": true,
                                          "defaultExclusiveJoinTask": [],
                                          "asyncComplete": false,
                                          "loopCondition": "(function () {if ($.do_while_htmlsource_rule_ref['iteration'] < $.rule_count) {    return true;  }  return false;})();",
                                          "loopOver": [
                                            {
                                              "name": "Rule HTML Source JSON Transform",
                                              "taskReferenceName": "rule_html_source_json_transform_ref",
                                              "inputParameters": {
                                                "rules": "${result_jq_html_source_completed_filter_ref.output.result}",
                                                "queryExpression": ".rules | .[${do_while_htmlsource_rule_ref.output.iteration} - 1:${do_while_htmlsource_rule_ref.output.iteration}]| .[]"
                                              },
                                              "type": "JSON_JQ_TRANSFORM",
                                              "decisionCases": {},
                                              "defaultCase": [],
                                              "forkTasks": [],
                                              "startDelay": 0,
                                              "joinOn": [],
                                              "optional": true,
                                              "defaultExclusiveJoinTask": [],
                                              "asyncComplete": false,
                                              "loopOver": [],
                                              "onStateChange": {}
                                            },                                      
                                            {
                                              "name": "Start Rule Child Workflow HTML Source",
                                              "taskReferenceName": "start_rule_child_workflow_html_source_ref",
                                              "inputParameters": {
                                                "ipa": "${workflow.input.ipa}",
                                                "resultURL": "${rule_html_source_json_transform_ref.output.result.destinationUrl}",
                                                "rule_name": "${rule_html_source_json_transform_ref.output.result.ruleName}",
                                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                "save_method": "PUT",
                                                "connection_timeout": "${workflow.input.connection_timeout}",
                                                "read_timeout": "${workflow.input.read_timeout}",
                                                "crawling_mode": "${workflow.input.crawling_mode}",
                                                "result_base_url": "${workflow.input.result_base_url}"
                                              },
                                              "subWorkflowParam": {
                                                "name": "rule_detail_child_workflow",
                                                "version": 1
                                              },
                                              "type": "SUB_WORKFLOW"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "defaultCase": [],
                                    "evaluatorType": "value-param",
                                    "expression": "exists"
                                  },
                                  {
                                    "name": "Terminate Rule HTML Source Completed",
                                    "taskReferenceName": "terminate_rule_html_source_completed_ref",
                                    "inputParameters": {
                                      "terminationStatus": "COMPLETED"
                                    },
                                    "type": "TERMINATE",
                                    "decisionCases": {},
                                    "defaultCase": [],
                                    "forkTasks": [],
                                    "startDelay": 0,
                                    "joinOn": [],
                                    "optional": false,
                                    "defaultExclusiveJoinTask": [],
                                    "asyncComplete": false,
                                    "loopOver": [],
                                    "onStateChange": {}
                                  }
                                ]
                              },
                              "defaultCase": [],
                              "forkTasks": [],
                              "startDelay": 0,
                              "joinOn": [],
                              "optional": true,
                              "defaultExclusiveJoinTask": [],
                              "asyncComplete": false,
                              "loopOver": [],
                              "evaluatorType": "value-param",
                              "expression": "switchCaseValue",
                              "onStateChange": {}
                            }
                          ],
                          "407": [
                            {
                              "name": "Company JQ HTML Source 407 Failed",
                              "taskReferenceName": "company_jq_html_source_failed_407_ref",
                              "inputParameters": {
                                "id": "${workflow.input.ipa.idResult}",
                                "idIpa": "${workflow.input.ipa.id}",
                                "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                "tipologia": "${workflow.input.ipa.tipologia}",
                                "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                "acronimo": "${workflow.input.ipa.acronimo}",
                                "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                "sorgente": "${workflow.input.ipa.sorgente}",
                                "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                "workflow_child_id": "${workflow.workflowId}",
                                "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                "length": "${crawler_html_source_ref.output.response.body.length}",
                                "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 407, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }",
                                "ruleName": "${workflow.input.rule_name}/child"
                              },
                              "type": "JSON_JQ_TRANSFORM",
                              "decisionCases": {},
                              "defaultCase": [],
                              "forkTasks": [],
                              "startDelay": 0,
                              "joinOn": [],
                              "optional": true,
                              "defaultExclusiveJoinTask": [],
                              "asyncComplete": false,
                              "loopOver": [],
                              "onStateChange": {}
                            },
                            {
                              "name": "Result Rule HTML Source 407 Failed",
                              "taskReferenceName": "result_rule_html_source_407_failed_ref",
                              "inputParameters": {
                                "http_request": {
                                  "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                  "body": "${company_jq_html_source_failed_407_ref.output.result}",
                                  "method": "PUT",
                                  "connectionTimeOut": 10000,
                                  "readTimeOut": 120000
                                }
                              },
                              "type": "HTTP",
                              "optional": true,
                              "asyncComplete": false
                            },
                            {
                              "name": "Terminate Rule HTML Source 407Failed",
                              "taskReferenceName": "terminate_rule_html_source_407_failed_ref",
                              "inputParameters": {
                                "terminationStatus": "COMPLETED"
                              },
                              "type": "TERMINATE",
                              "decisionCases": {},
                              "defaultCase": [],
                              "forkTasks": [],
                              "startDelay": 0,
                              "joinOn": [],
                              "optional": false,
                              "defaultExclusiveJoinTask": [],
                              "asyncComplete": false,
                              "loopOver": [],
                              "onStateChange": {}
                            }
                          ]
                        },
                        "defaultCase": [],
                        "forkTasks": [],
                        "startDelay": 0,
                        "joinOn": [],
                        "optional": true,
                        "defaultExclusiveJoinTask": [],
                        "asyncComplete": false,
                        "loopOver": [],
                        "evaluatorType": "value-param",
                        "expression": "switchCaseValue",
                        "onStateChange": {}
                      }
                    ],
                    "COMPLETED": [
                      {
                        "name": "Company JQ HTTP Stream Completed",
                        "taskReferenceName": "company_jq_http_stream_completed_ref",
                        "inputParameters": {
                          "id": "${workflow.input.ipa.idResult}",
                          "idIpa": "${workflow.input.ipa.id}",
                          "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                          "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                          "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                          "tipologia": "${workflow.input.ipa.tipologia}",
                          "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                          "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                          "acronimo": "${workflow.input.ipa.acronimo}",
                          "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                          "sorgente": "${workflow.input.ipa.sorgente}",
                          "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                          "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                          "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                          "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                          "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                          "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                          "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                          "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                          "workflow_child_id": "${workflow.workflowId}",
                          "length": "${crawler_http_stream_ref.output.response.body.length}",
                          "resultRuleCreateDtos": "${rule_http_stream_ref.output.response.body}",
                          "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, resultRuleCreateDtos: .resultRuleCreateDtos, realUrl: .realUrl, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length }"
                        },
                        "type": "JSON_JQ_TRANSFORM",
                        "decisionCases": {},
                        "defaultCase": [],
                        "forkTasks": [],
                        "startDelay": 0,
                        "joinOn": [],
                        "optional": true,
                        "defaultExclusiveJoinTask": [],
                        "asyncComplete": false,
                        "loopOver": [],
                        "onStateChange": {}
                      },
                      {
                        "name": "Result Rule HTTP Stream Completed",
                        "taskReferenceName": "result_rule_http_stream_completed_ref",
                        "inputParameters": {
                          "http_request": {
                            "uri": "${workflow.input.result_base_url}/result-service/v1/results/bulk",
                            "body": "${company_jq_http_stream_completed_ref.output.result}",
                            "method": "PUT",
                            "connectionTimeOut": 10000,
                            "readTimeOut": 120000
                          }
                        },
                        "type": "HTTP",
                        "optional": true,
                        "asyncComplete": false
                      },
                      {
                        "name": "Result JQ HTTP Stream Completed Filter",
                        "taskReferenceName": "result_jq_http_stream_completed_filter_ref",
                        "inputParameters": {
                          "results": "${result_rule_http_stream_completed_ref.output.response.body}",
                          "queryExpression": "[.results[] | select (.leaf == false and (.status == 200 or .status == 202))]"
                        },
                        "type": "JSON_JQ_TRANSFORM",
                        "optional": true,
                        "asyncComplete": false
                      },
                      {
                        "name": "HTTP Stream Leaf",
                        "taskReferenceName": "http_stream_ref",
                        "inputParameters": {
                          "expression": "(function(){ if ($.s > 0){return true;} else { return false;} })();",
                          "evaluatorType": "javascript",
                          "s": "${result_jq_http_stream_completed_filter_ref.output.result.length()}"
                        },
                        "type": "INLINE",
                        "optional": true,
                        "asyncComplete": false
                      },
                      {
                        "name": "SWITCH HTTP Stream Leaf",
                        "taskReferenceName": "switch_http_stream_leaf_ref",
                        "inputParameters": {
                          "exists": "${http_stream_ref.output.result}"
                        },
                        "type": "SWITCH",
                        "decisionCases": {
                          "true": [
                            {
                              "name": "DO While HTTP Stream Rule ",
                              "taskReferenceName": "do_while_httpstream_rule_ref",
                              "inputParameters": {
                                "rule_count": "${result_jq_http_stream_completed_filter_ref.output.result.length()}"
                              },
                              "type": "DO_WHILE",
                              "decisionCases": {},
                              "defaultCase": [],
                              "forkTasks": [],
                              "startDelay": 0,
                              "joinOn": [],
                              "optional": true,
                              "defaultExclusiveJoinTask": [],
                              "asyncComplete": false,
                              "loopCondition": "(function () {if ($.do_while_httpstream_rule_ref['iteration'] < $.rule_count) {    return true;  }  return false;})();",
                              "loopOver": [
                                {
                                  "name": "Rule HTTP Stream JSON Transform",
                                  "taskReferenceName": "rule_http_stream_json_transform_ref",
                                  "inputParameters": {
                                    "rules": "${result_jq_http_stream_completed_filter_ref.output.result}",
                                    "queryExpression": ".rules | .[${do_while_httpstream_rule_ref.output.iteration} - 1:${do_while_httpstream_rule_ref.output.iteration}]| .[]"
                                  },
                                  "type": "JSON_JQ_TRANSFORM",
                                  "optional": false,
                                  "asyncComplete": false
                                },                                      
                                {
                                  "name": "Start Rule Child Workflow HTTP Stream",
                                  "taskReferenceName": "start_rule_child_workflow_http_stream_ref",
                                  "inputParameters": {
                                    "ipa": "${workflow.input.ipa}",
                                    "resultURL": "${rule_http_stream_json_transform_ref.output.result.destinationUrl}",
                                    "rule_name": "${rule_http_stream_json_transform_ref.output.result.ruleName}",
                                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                    "crawler_save_object": "${workflow.input.crawler_save_object}",
                                    "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                    "save_method": "PUT",
                                    "connection_timeout": "${workflow.input.connection_timeout}",
                                    "read_timeout": "${workflow.input.read_timeout}",
                                    "crawling_mode": "${workflow.input.crawling_mode}",
                                    "result_base_url": "${workflow.input.result_base_url}"
                                  },
                                  "subWorkflowParam": {
                                    "name": "rule_detail_child_workflow",
                                    "version": 1
                                  },
                                  "type": "SUB_WORKFLOW",
                                  "optional": false,
                                  "asyncComplete": false
                                }
                              ]
                            }
                          ]
                        },
                        "defaultCase": [],
                        "evaluatorType": "value-param",
                        "expression": "exists"
                      },
                      {
                        "name": "Terminate Rule HTTP Stream Completed",
                        "taskReferenceName": "terminate_rule_http_stream_completed_ref",
                        "inputParameters": {
                          "terminationStatus": "COMPLETED"
                        },
                        "type": "TERMINATE",
                        "decisionCases": {},
                        "defaultCase": [],
                        "forkTasks": [],
                        "startDelay": 0,
                        "joinOn": [],
                        "optional": false,
                        "defaultExclusiveJoinTask": [],
                        "asyncComplete": false,
                        "loopOver": [],
                        "onStateChange": {}
                      }
                    ]
                  },
                  "defaultCase": [],
                  "forkTasks": [],
                  "startDelay": 0,
                  "joinOn": [],
                  "optional": true,
                  "defaultExclusiveJoinTask": [],
                  "asyncComplete": false,
                  "loopOver": [],
                  "evaluatorType": "value-param",
                  "expression": "switchCaseValue",
                  "onStateChange": {}
                }
              ],
              "407": [
                {
                  "name": "Company JQ HTTP Stream Failed",
                  "taskReferenceName": "company_jq_http_stream_failed_ref",
                  "inputParameters": {
                    "id": "${workflow.input.ipa.idResult}",
                    "idIpa": "${workflow.input.ipa.id}",
                    "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                    "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                    "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                    "tipologia": "${workflow.input.ipa.tipologia}",
                    "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                    "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                    "acronimo": "${workflow.input.ipa.acronimo}",
                    "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                    "sorgente": "${workflow.input.ipa.sorgente}",
                    "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                    "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                    "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                    "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                    "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                    "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                    "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                    "status": "${crawler_http_stream_ref.output.response.body.result}",
                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                    "workflow_child_id": "${workflow.workflowId}",
                    "error_message": "${crawler_http_stream_ref.output.response.body.message}",
                    "length": "${crawler_http_stream_ref.output.response.body.length}",
                    "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: .status, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName}",
                    "ruleName": "${workflow.input.rule_name}/child"
                  },
                  "type": "JSON_JQ_TRANSFORM",
                  "decisionCases": {},
                  "defaultCase": [],
                  "forkTasks": [],
                  "startDelay": 0,
                  "joinOn": [],
                  "optional": true,
                  "defaultExclusiveJoinTask": [],
                  "asyncComplete": false,
                  "loopOver": [],
                  "onStateChange": {}
                },
                {
                  "name": "Result HTTP Stream Failed",
                  "taskReferenceName": "result_http_stream_failed_ref",
                  "inputParameters": {
                    "http_request": {
                      "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                      "body": "${company_jq_http_stream_failed_ref.output.result}",
                      "method": "PUT",
                      "connectionTimeOut": 10000,
                      "readTimeOut": 120000
                    }
                  },
                  "type": "HTTP",
                  "optional": true,
                  "asyncComplete": false
                },
                {
                  "name": "Terminate Result HTTP Stream Failed",
                  "taskReferenceName": "terminate_result_http_stream_failed_ref",
                  "inputParameters": {
                    "terminationStatus": "COMPLETED"
                  },
                  "type": "TERMINATE",
                  "decisionCases": {},
                  "defaultCase": [],
                  "forkTasks": [],
                  "startDelay": 0,
                  "joinOn": [],
                  "optional": false,
                  "defaultExclusiveJoinTask": [],
                  "asyncComplete": false,
                  "loopOver": [],
                  "onStateChange": {}
                }
              ]
            },
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": true,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "evaluatorType": "value-param",
            "expression": "switchCaseValue",
            "onStateChange": {}
          }
        ],
        "COMPLETED_WITH_ERRORS": [
          {
            "name": "Company JQ HTTP Stream 500 Failed",
            "taskReferenceName": "company_jq_http_stream_500_failed_ref",
            "inputParameters": {
              "id": "${workflow.input.ipa.idResult}",
              "idIpa": "${workflow.input.ipa.id}",
              "codiceIpa": "${workflow.input.ipa.codiceIpa}",
              "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
              "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
              "tipologia": "${workflow.input.ipa.tipologia}",
              "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
              "codiceNatura": "${workflow.input.ipa.codiceNatura}",
              "acronimo": "${workflow.input.ipa.acronimo}",
              "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
              "sorgente": "${workflow.input.ipa.sorgente}",
              "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
              "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
              "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
              "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
              "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
              "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
              "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
              "status": "${crawler_http_stream_ref.output.response.body.result}",
              "parent_workflow_id": "${workflow.input.parent_workflow_id}",
              "workflow_child_id": "${workflow.workflowId}",
              "error_message": "${crawler_http_stream_ref.output.response}",
              "length": "${crawler_http_stream_ref.output.response.body.length}",
              "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 500, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName}",
              "ruleName": "${workflow.input.rule_name}/child"
            },
            "type": "JSON_JQ_TRANSFORM",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": true,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          },
          {
            "name": "Result HTTP Stream 500 Failed",
            "taskReferenceName": "result_http_stream_500_failed_ref",
            "inputParameters": {
              "http_request": {
                "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                "body": "${company_jq_http_stream_500_failed_ref.output.result}",
                "method": "PUT",
                "connectionTimeOut": 10000,
                "readTimeOut": 120000
              }
            },
            "type": "HTTP",
            "optional": true,
            "asyncComplete": false
          },
          {
            "name": "Terminate Result HTTP Stream 500 Failed",
            "taskReferenceName": "terminate_result_http_stream_500_failed_ref",
            "inputParameters": {
              "terminationStatus": "COMPLETED"
            },
            "type": "TERMINATE",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": false,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
          }
        ]
      },
      "defaultCase": [],
      "forkTasks": [],
      "startDelay": 0,
      "joinOn": [],
      "optional": true,
      "defaultExclusiveJoinTask": [],
      "asyncComplete": false,
      "loopOver": [],
      "evaluatorType": "value-param",
      "expression": "switchCaseValue",
      "onStateChange": {}
    }
  ],
  "inputParameters": [
    "ipa",
    "crawler_save_object",
    "crawler_save_screenshot",
    "parent_workflow_id",
    "save_method",
    "rule_name",
    "connection_timeout",
    "read_timeout",
    "crawling_mode",
    "result_base_url"
  ],
  "outputParameters": {},
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "ownerEmail": "marco.spasiano@gmail.com",
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {}
}