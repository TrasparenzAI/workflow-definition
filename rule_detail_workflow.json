{
    "createTime": 1706115292688,
    "updateTime": 1706474406146,
    "accessPolicy": {},
    "name": "rule_detail_workflow",
    "description": "Rule Detail Workflow",
    "version": 1,
    "tasks": [
        {
            "name": "Crawler Child Type Sub Workflow",
            "taskReferenceName": "crawler_child_type_sub_workflow_ref",
            "inputParameters": {
                "expression": "(function(){ if ($.s != undefined && $.s == 'SUB_WORKFLOW'){return true;} else { return false;} })();",
                "evaluatorType": "javascript",
                "s": "${workflow.input.crawler_child_type}"
            },
            "type": "INLINE"
        },
        {
            "name": "sito_istituzionale_present",
            "taskReferenceName": "sito_istituzionale_present_ref",
            "inputParameters": {
                "expression": "(function(){ if ($.s != undefined && $.s.length > 0){return true;} else { return false;} })();",
                "evaluatorType": "javascript",
                "s": "${workflow.input.ipa.sitoIstituzionale}"
            },
            "type": "INLINE"
        },
        {
            "name": "switch_sito_istituzionale",
            "taskReferenceName": "switch_sito_istituzionale_ref",
            "inputParameters": {
                "exists": "${sito_istituzionale_present_ref.output.result}"
            },
            "type": "SWITCH",
            "decisionCases": {
                "true": [
                    {
                        "name": "Crawler HTTP Stream",
                        "taskReferenceName": "crawler_http_stream_ref",
                        "inputParameters": {
                            "http_request": {
                                "uri": "https://monitorai.ba.cnr.it/crawler/crawl",
                                "body": "{\"crawlingMode\": \"${workflow.input.crawling_mode}\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":false,\"url\": \"${workflow.input.ipa.sitoIstituzionale}\"}",
                                "method": "POST",
                                "connectionTimeOut": "${workflow.input.connection_timeout}",
                                "readTimeOut": "${workflow.input.read_timeout}"
                            }
                        },
                        "type": "HTTP",
                        "optional": true
                    },
                    {
                        "name": "Switch Crawler HTTP Stream Completed",
                        "taskReferenceName": "switch_crawler_http_stream_completed_ref",
                        "inputParameters": {
                            "switchCaseValue": "${crawler_http_stream_ref.status}"
                        },
                        "type": "SWITCH",
                        "startDelay": 0,
                        "optional": false,
                        "asyncComplete": false,
                        "evaluatorType": "value-param",
                        "expression": "switchCaseValue",
                        "decisionCases": {
                            "COMPLETED": [
                                {
                                    "name": "Switch Crawler HTTP Stream",
                                    "taskReferenceName": "switch_crawler_http_stream_ref",
                                    "inputParameters": {
                                        "switchCaseValue": "${crawler_http_stream_ref.output.response.body.result}"
                                    },
                                    "type": "SWITCH",
                                    "decisionCases": {
                                        "200": [
                                            {
                                                "name": "Rule HTTP Stream",
                                                "taskReferenceName": "rule_http_stream_ref",
                                                "inputParameters": {
                                                    "http_request": {
                                                        "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules?ruleName=${workflow.input.rule_name}",
                                                        "body": "${crawler_http_stream_ref.output.response.body.htmlPage}",
                                                        "method": "POST",
                                                        "connectionTimeOut": 1000,
                                                        "readTimeOut": 5000
                                                    }
                                                },
                                                "type": "HTTP",
                                                "startDelay": 0,
                                                "optional": true,
                                                "asyncComplete": false
                                            },
                                            {
                                                "name": "Switch Rule HTTP Stream",
                                                "taskReferenceName": "switch_rule_http_stream_ref",
                                                "inputParameters": {
                                                    "switchCaseValue": "${rule_http_stream_ref.status}"
                                                },
                                                "type": "SWITCH",
                                                "decisionCases": {
                                                    "COMPLETED_WITH_ERRORS": [
                                                        {
                                                            "name": "Crawler HTML Source",
                                                            "taskReferenceName": "crawler_html_source_ref",
                                                            "inputParameters": {
                                                                "http_request": {
                                                                    "uri": "https://monitorai.ba.cnr.it/crawler/crawl",
                                                                    "body": "{\"crawlingMode\": \"htmlSource\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":${workflow.input.crawler_save_screenshot},\"url\": \"${workflow.input.ipa.sitoIstituzionale}\"}",
                                                                    "method": "POST",
                                                                    "connectionTimeOut": "${workflow.input.connection_timeout}",
                                                                    "readTimeOut": "${workflow.input.read_timeout}"
                                                                }
                                                            },
                                                            "type": "HTTP",
                                                            "startDelay": 0,
                                                            "optional": true,
                                                            "asyncComplete": false
                                                        },
                                                        {
                                                            "name": "Switch Crawler HTML Source Completed",
                                                            "taskReferenceName": "switch_crawler_html_source_completed_ref",
                                                            "inputParameters": {
                                                                "switchCaseValue": "${crawler_html_source_ref.status}"
                                                            },
                                                            "type": "SWITCH",
                                                            "decisionCases": {
                                                                "COMPLETED": [
                                                                    {
                                                                        "name": "Switch Crawler HTML Source",
                                                                        "taskReferenceName": "switch_crawler_html_source_ref",
                                                                        "inputParameters": {
                                                                            "switchCaseValue": "${crawler_html_source_ref.output.response.body.result}"
                                                                        },
                                                                        "type": "SWITCH",
                                                                        "decisionCases": {
                                                                            "200": [
                                                                                {
                                                                                    "name": "Rule HTML Source",
                                                                                    "taskReferenceName": "rule_html_source_ref",
                                                                                    "inputParameters": {
                                                                                        "http_request": {
                                                                                            "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules?ruleName=${workflow.input.rule_name}",
                                                                                            "body": "${crawler_html_source_ref.output.response.body.htmlPage}",
                                                                                            "method": "POST",
                                                                                            "connectionTimeOut": 1000,
                                                                                            "readTimeOut": 1000
                                                                                        }
                                                                                    },
                                                                                    "type": "HTTP",
                                                                                    "startDelay": 0,
                                                                                    "optional": true,
                                                                                    "asyncComplete": false
                                                                                },
                                                                                {
                                                                                    "name": "Switch Rule HTML Source",
                                                                                    "taskReferenceName": "switch_rule_html_source_ref",
                                                                                    "inputParameters": {
                                                                                        "switchCaseValue": "${rule_html_source_ref.status}"
                                                                                    },
                                                                                    "type": "SWITCH",
                                                                                    "decisionCases": {
                                                                                        "COMPLETED_WITH_ERRORS": [
                                                                                            {
                                                                                                "name": "Company JQ HTML Source Failed",
                                                                                                "taskReferenceName": "company_jq_html_source_failed_ref",
                                                                                                "inputParameters": {
                                                                                                    "id": "${workflow.input.ipa.idResult}",
                                                                                                    "idIpa": "${workflow.input.ipa.id}",
                                                                                                    "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                                                                    "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                                                                    "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                                                                    "tipologia": "${workflow.input.ipa.tipologia}",
                                                                                                    "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                                                                    "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                                                                    "acronimo": "${workflow.input.ipa.acronimo}",
                                                                                                    "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                                                                    "sorgente": "${workflow.input.ipa.sorgente}",
                                                                                                    "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                                                                                    "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                                                                                    "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                                                                                    "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                                                                                    "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                                                                                    "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                                                                                    "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                                                                                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                                    "workflow_child_id": "${workflow.workflowId}",
                                                                                                    "ruleName": "${workflow.input.rule_name}",
                                                                                                    "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                                                                                    "length": "${crawler_html_source_ref.output.response.body.length}",
                                                                                                    "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 400, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }"
                                                                                                },
                                                                                                "type": "JSON_JQ_TRANSFORM"
                                                                                            },
                                                                                            {
                                                                                                "name": "Result Rule HTML Source Failed",
                                                                                                "taskReferenceName": "result_rule_html_source_failed_ref",
                                                                                                "inputParameters": {
                                                                                                    "http_request": {
                                                                                                        "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                                                                        "body": "${company_jq_html_source_failed_ref.output.result}",
                                                                                                        "method": "${workflow.input.save_method}",
                                                                                                        "connectionTimeOut": 10000,
                                                                                                        "readTimeOut": 120000
                                                                                                    }
                                                                                                },
                                                                                                "type": "HTTP",
                                                                                                "startDelay": 0,
                                                                                                "optional": true,
                                                                                                "asyncComplete": false
                                                                                            },
                                                                                            {
                                                                                                "name": "Terminate Rule HTML Source Failed",
                                                                                                "taskReferenceName": "terminate_rule_html_source_failed_ref",
                                                                                                "inputParameters": {
                                                                                                    "terminationStatus": "COMPLETED"
                                                                                                },
                                                                                                "type": "TERMINATE",
                                                                                                "startDelay": 0,
                                                                                                "optional": false
                                                                                            }
                                                                                        ],
                                                                                        "COMPLETED": [
                                                                                            {
                                                                                                "name": "Company JQ HTML Source Completed",
                                                                                                "taskReferenceName": "company_jq_html_source_completed_ref",
                                                                                                "inputParameters": {
                                                                                                    "id": "${workflow.input.ipa.idResult}",
                                                                                                    "idIpa": "${workflow.input.ipa.id}",
                                                                                                    "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                                                                    "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                                                                    "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                                                                    "tipologia": "${workflow.input.ipa.tipologia}",
                                                                                                    "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                                                                    "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                                                                    "acronimo": "${workflow.input.ipa.acronimo}",
                                                                                                    "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                                                                    "sorgente": "${workflow.input.ipa.sorgente}",
                                                                                                    "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                                                                                    "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                                                                                    "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                                                                                    "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                                                                                    "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                                                                                    "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                                                                                    "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                                                                                    "url": "${rule_html_source_ref.output.response.body.url}",
                                                                                                    "ruleName": "${rule_html_source_ref.output.response.body.ruleName}",
                                                                                                    "term": "${rule_html_source_ref.output.response.body.term}",
                                                                                                    "content": "${rule_html_source_ref.output.response.body.content}",
                                                                                                    "status": "${rule_html_source_ref.output.response.body.status}",
                                                                                                    "score": "${rule_html_source_ref.output.response.body.score}",
                                                                                                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                                    "leaf": "${rule_html_source_ref.output.response.body.leaf}",
                                                                                                    "workflow_child_id": "${workflow.workflowId}",
                                                                                                    "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                                                                                    "length": "${crawler_html_source_ref.output.response.body.length}",
                                                                                                    "where": "${rule_html_source_ref.output.response.body.where}",
                                                                                                    "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, url: .url, ruleName: .ruleName, term: .term, content: .content, status: .status, score: .score, workflowId: .parent_workflow_id, leaf: .leaf, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, where: .where }"
                                                                                                },
                                                                                                "type": "JSON_JQ_TRANSFORM"
                                                                                            },
                                                                                            {
                                                                                                "name": "Result Rule HTML Source Completed",
                                                                                                "taskReferenceName": "result_rule_html_source_completed_ref",
                                                                                                "inputParameters": {
                                                                                                    "http_request": {
                                                                                                        "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                                                                        "body": "${company_jq_html_source_completed_ref.output.result}",
                                                                                                        "method": "${workflow.input.save_method}",
                                                                                                        "connectionTimeOut": 10000,
                                                                                                        "readTimeOut": 120000
                                                                                                    }
                                                                                                },
                                                                                                "type": "HTTP",
                                                                                                "startDelay": 0,
                                                                                                "optional": true,
                                                                                                "asyncComplete": false
                                                                                            },
                                                                                            {
                                                                                                "name": "SWITCH Rule HTML Source Execute Child",
                                                                                                "taskReferenceName": "switch_rule_html_source_execute_child_ref",
                                                                                                "inputParameters": {
                                                                                                    "exists": "${workflow.input.execute_child}"
                                                                                                },
                                                                                                "type": "SWITCH",
                                                                                                "decisionCases": {
                                                                                                    "true": [
                                                                                                        {
                                                                                                            "name": "Switch Child Type SUB WORKFLOW HTML Source",
                                                                                                            "taskReferenceName": "switch_child_type_sub_workflow_html_source_ref",
                                                                                                            "inputParameters": {
                                                                                                                "exists": "${crawler_child_type_sub_workflow_ref.output.result}"
                                                                                                            },
                                                                                                            "type": "SWITCH",
                                                                                                            "decisionCases": {
                                                                                                                "true": [
                                                                                                                    {
                                                                                                                        "name": "SUB Rule Child Workflow HTML Source",
                                                                                                                        "taskReferenceName": "sub_rule_child_workflow_html_source_ref",
                                                                                                                        "inputParameters": {
                                                                                                                            "ipa": "${workflow.input.ipa}",
                                                                                                                            "resultURL": "${result_rule_html_source_completed_ref.output.response.body.destinationUrl}",
                                                                                                                            "rule_name": "${result_rule_html_source_completed_ref.output.response.body.ruleName}",
                                                                                                                            "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                                                            "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                                                                                            "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                                                                                            "save_method": "PUT",
                                                                                                                            "connection_timeout": "${workflow.input.connection_timeout}",
                                                                                                                            "read_timeout": "${workflow.input.read_timeout}",
                                                                                                                            "crawling_mode": "${workflow.input.crawling_mode}",
                                                                                                                            "result_base_url": "${workflow.input.result_base_url}"
                                                                                                                        },
                                                                                                                        "subWorkflowParam": {
                                                                                                                          "name": "rule_detail_child_workflow",
                                                                                                                          "version": 1
                                                                                                                        },                
                                                                                                                        "type": "SUB_WORKFLOW"
                                                                                                                    }
                                                                                                                ],
                                                                                                                "false": [
                                                                                                                    {
                                                                                                                        "name": "Start Rule Child Workflow HTML Source",
                                                                                                                        "taskReferenceName": "start_rule_child_workflow_html_source_ref",
                                                                                                                        "inputParameters": {
                                                                                                                            "startWorkflow": {
                                                                                                                              "name": "rule_detail_child_workflow",
                                                                                                                              "input": {
                                                                                                                                "ipa": "${workflow.input.ipa}",
                                                                                                                                "resultURL": "${result_rule_html_source_completed_ref.output.response.body.destinationUrl}",
                                                                                                                                "rule_name": "${result_rule_html_source_completed_ref.output.response.body.ruleName}",
                                                                                                                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                                                                "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                                                                                                "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                                                                                                "save_method": "PUT",
                                                                                                                                "connection_timeout": "${workflow.input.connection_timeout}",
                                                                                                                                "read_timeout": "${workflow.input.read_timeout}",
                                                                                                                                "crawling_mode": "${workflow.input.crawling_mode}",
                                                                                                                                "result_base_url": "${workflow.input.result_base_url}"
                                                                                                                              },
                                                                                                                              "version": 1
                                                                                                                            }
                                                                                                                      },
                                                                                                                      "type": "START_WORKFLOW"
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            "defaultCase": [],
                                                                                                            "evaluatorType": "value-param",
                                                                                                            "expression": "exists"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "defaultCase": [],
                                                                                                "evaluatorType": "value-param",
                                                                                                "expression": "exists"
                                                                                            },
                                                                                            {
                                                                                                "name": "Terminate Rule HTML Source Completed",
                                                                                                "taskReferenceName": "terminate_rule_html_source_completed_ref",
                                                                                                "inputParameters": {
                                                                                                    "terminationStatus": "COMPLETED"
                                                                                                },
                                                                                                "type": "TERMINATE",
                                                                                                "startDelay": 0,
                                                                                                "optional": false
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "startDelay": 0,
                                                                                    "optional": false,
                                                                                    "asyncComplete": false,
                                                                                    "evaluatorType": "value-param",
                                                                                    "expression": "switchCaseValue"
                                                                                }
                                                                            ],
                                                                            "407": [
                                                                                {
                                                                                    "name": "Company JQ HTML Source 407 Failed",
                                                                                    "taskReferenceName": "company_jq_html_source_failed_407_ref",
                                                                                    "inputParameters": {
                                                                                        "id": "${workflow.input.ipa.idResult}",
                                                                                        "idIpa": "${workflow.input.ipa.id}",
                                                                                        "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                                                        "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                                                        "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                                                        "tipologia": "${workflow.input.ipa.tipologia}",
                                                                                        "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                                                        "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                                                        "acronimo": "${workflow.input.ipa.acronimo}",
                                                                                        "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                                                        "sorgente": "${workflow.input.ipa.sorgente}",
                                                                                        "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                                                                        "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                                                                        "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                                                                        "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                                                                        "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                                                                        "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                                                                        "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                                                                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                        "workflow_child_id": "${workflow.workflowId}",
                                                                                        "ruleName": "${workflow.input.rule_name}",
                                                                                        "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                                                                        "length": "${crawler_html_source_ref.output.response.body.length}",
                                                                                        "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 407, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }"
                                                                                    },
                                                                                    "type": "JSON_JQ_TRANSFORM"
                                                                                },
                                                                                {
                                                                                    "name": "Result Rule HTML Source 407 Failed",
                                                                                    "taskReferenceName": "result_rule_html_source_407_failed_ref",
                                                                                    "inputParameters": {
                                                                                        "http_request": {
                                                                                            "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                                                            "body": "${company_jq_html_source_failed_407_ref.output.result}",
                                                                                            "method": "${workflow.input.save_method}",
                                                                                            "connectionTimeOut": 10000,
                                                                                            "readTimeOut": 120000
                                                                                        }
                                                                                    },
                                                                                    "type": "HTTP",
                                                                                    "startDelay": 0,
                                                                                    "optional": true,
                                                                                    "asyncComplete": false
                                                                                },
                                                                                {
                                                                                    "name": "Terminate Rule HTML Source 407Failed",
                                                                                    "taskReferenceName": "terminate_rule_html_source_407_failed_ref",
                                                                                    "inputParameters": {
                                                                                        "terminationStatus": "COMPLETED"
                                                                                    },
                                                                                    "type": "TERMINATE",
                                                                                    "startDelay": 0,
                                                                                    "optional": false
                                                                                }
                                                                            ]
                                                                        },
                                                                        "startDelay": 0,
                                                                        "optional": false,
                                                                        "asyncComplete": false,
                                                                        "evaluatorType": "value-param",
                                                                        "expression": "switchCaseValue"
                                                                    }
                                                                ],
                                                                "COMPLETED_WITH_ERRORS": [
                                                                    {
                                                                        "name": "Company JQ HTML Source 407 Failed",
                                                                        "taskReferenceName": "company_jq_html_source_407_failed_ref",
                                                                        "inputParameters": {
                                                                            "id": "${workflow.input.ipa.idResult}",
                                                                            "idIpa": "${workflow.input.ipa.id}",
                                                                            "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                                            "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                                            "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                                            "tipologia": "${workflow.input.ipa.tipologia}",
                                                                            "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                                            "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                                            "acronimo": "${workflow.input.ipa.acronimo}",
                                                                            "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                                            "sorgente": "${workflow.input.ipa.sorgente}",
                                                                            "status": "407",
                                                                            "ruleName": "${workflow.input.rule_name}",
                                                                            "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                            "workflow_child_id": "${workflow.workflowId}",
                                                                            "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, status: .status, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, ruleName: .ruleName}"
                                                                        },
                                                                        "type": "JSON_JQ_TRANSFORM",
                                                                        "startDelay": 0,
                                                                        "optional": false,
                                                                        "asyncComplete": false
                                                                    },
                                                                    {
                                                                        "name": "Result HTML Source 407 Failed",
                                                                        "taskReferenceName": "result_html_source_407_failed_ref",
                                                                        "inputParameters": {
                                                                            "http_request": {
                                                                                "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                                                "body": "${company_jq_html_source_407_failed_ref.output.result}",
                                                                                "method": "${workflow.input.save_method}",
                                                                                "connectionTimeOut": 10000,
                                                                                "readTimeOut": 120000
                                                                            }
                                                                        },
                                                                        "type": "HTTP",
                                                                        "startDelay": 0,
                                                                        "optional": true,
                                                                        "asyncComplete": false
                                                                    },
                                                                    {
                                                                        "name": "Terminate Result HTML Source 407 Failed",
                                                                        "taskReferenceName": "terminate_result_html_source_407_failed_ref",
                                                                        "inputParameters": {
                                                                            "terminationStatus": "COMPLETED"
                                                                        },
                                                                        "type": "TERMINATE",
                                                                        "startDelay": 0,
                                                                        "optional": false,
                                                                        "asyncComplete": false
                                                                    }
                                                                ]
                                                            },
                                                            "startDelay": 0,
                                                            "optional": false,
                                                            "asyncComplete": false,
                                                            "evaluatorType": "value-param",
                                                            "expression": "switchCaseValue"
                                                        }
                                                    ],
                                                    "COMPLETED": [
                                                        {
                                                            "name": "Company JQ HTTP Stream Completed",
                                                            "taskReferenceName": "company_jq_http_stream_completed_ref",
                                                            "inputParameters": {
                                                                "id": "${workflow.input.ipa.idResult}",
                                                                "idIpa": "${workflow.input.ipa.id}",
                                                                "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                                "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                                "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                                "tipologia": "${workflow.input.ipa.tipologia}",
                                                                "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                                "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                                "acronimo": "${workflow.input.ipa.acronimo}",
                                                                "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                                "sorgente": "${workflow.input.ipa.sorgente}",
                                                                "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                                                                "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                                                                "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                                                                "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                                                                "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                                                                "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                                                                "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                                                                "url": "${rule_http_stream_ref.output.response.body.url}",
                                                                "ruleName": "${rule_http_stream_ref.output.response.body.ruleName}",
                                                                "term": "${rule_http_stream_ref.output.response.body.term}",
                                                                "content": "${rule_http_stream_ref.output.response.body.content}",
                                                                "status": "${rule_http_stream_ref.output.response.body.status}",
                                                                "score": "${rule_http_stream_ref.output.response.body.score}",
                                                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                "leaf": "${rule_http_stream_ref.output.response.body.leaf}",
                                                                "workflow_child_id": "${workflow.workflowId}",
                                                                "error_message": "${rule_http_stream_ref.output.response.body.message}",
                                                                "length": "${crawler_http_stream_ref.output.response.body.length}",
                                                                "where": "${rule_http_stream_ref.output.response.body.where}",
                                                                "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, url: .url, ruleName: .ruleName, term: .term, content: .content, status: .status, score: .score, workflowId: .parent_workflow_id, leaf: .leaf, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, where: .where }"
                                                            },
                                                            "type": "JSON_JQ_TRANSFORM"
                                                        },
                                                        {
                                                            "name": "Result Rule HTTP Stream Completed",
                                                            "taskReferenceName": "result_rule_http_stream_completed_ref",
                                                            "inputParameters": {
                                                                "http_request": {
                                                                    "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                                    "body": "${company_jq_http_stream_completed_ref.output.result}",
                                                                    "method": "${workflow.input.save_method}",
                                                                    "connectionTimeOut": 10000,
                                                                    "readTimeOut": 120000
                                                                }
                                                            },
                                                            "type": "HTTP",
                                                            "startDelay": 0,
                                                            "optional": true,
                                                            "asyncComplete": false
                                                        },
                                                        {
                                                            "name": "SWITCH Rule HTTP Stream Execute Child",
                                                            "taskReferenceName": "switch_rule_http_stream_execute_child_ref",
                                                            "inputParameters": {
                                                                "exists": "${workflow.input.execute_child}"
                                                            },
                                                            "type": "SWITCH",
                                                            "decisionCases": {
                                                                "true": [
                                                                    {
                                                                        "name": "Switch Child Type SUB WORKFLOW HTTP Stream",
                                                                        "taskReferenceName": "switch_child_type_sub_workflow_http_stream_ref",
                                                                        "inputParameters": {
                                                                            "exists": "${crawler_child_type_sub_workflow_ref.output.result}"
                                                                        },
                                                                        "type": "SWITCH",
                                                                        "decisionCases": {
                                                                            "true": [
                                                                                {
                                                                                    "name": "SUB Rule Child Workflow HTTP Stream",
                                                                                    "taskReferenceName": "sub_rule_child_workflow_http_stream_ref",
                                                                                    "inputParameters": {
                                                                                        "ipa": "${workflow.input.ipa}",
                                                                                        "resultURL": "${result_rule_http_stream_completed_ref.output.response.body.destinationUrl}",
                                                                                        "rule_name": "${result_rule_http_stream_completed_ref.output.response.body.ruleName}",
                                                                                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                        "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                                                        "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                                                        "save_method": "PUT",
                                                                                        "connection_timeout": "${workflow.input.connection_timeout}",
                                                                                        "read_timeout": "${workflow.input.read_timeout}",
                                                                                        "crawling_mode": "${workflow.input.crawling_mode}",
                                                                                        "result_base_url": "${workflow.input.result_base_url}"
                                                                                    },
                                                                                    "subWorkflowParam": {
                                                                                      "name": "rule_detail_child_workflow",
                                                                                      "version": 1
                                                                                    },                
                                                                                    "type": "SUB_WORKFLOW"
                                                                                }
                                                                            ],
                                                                            "false": [
                                                                                {
                                                                                    "name": "Start Rule Child Workflow HTTP Stream",
                                                                                    "taskReferenceName": "start_rule_child_workflow_http_stream_ref",
                                                                                    "inputParameters": {
                                                                                        "startWorkflow": {
                                                                                          "name": "rule_detail_child_workflow",
                                                                                          "input": {
                                                                                            "ipa": "${workflow.input.ipa}",
                                                                                            "resultURL": "${result_rule_http_stream_completed_ref.output.response.body.destinationUrl}",
                                                                                            "rule_name": "${result_rule_http_stream_completed_ref.output.response.body.ruleName}",
                                                                                            "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                                            "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                                                            "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                                                            "save_method": "PUT",
                                                                                            "connection_timeout": "${workflow.input.connection_timeout}",
                                                                                            "read_timeout": "${workflow.input.read_timeout}",
                                                                                            "crawling_mode": "${workflow.input.crawling_mode}",
                                                                                            "result_base_url": "${workflow.input.result_base_url}"
                                                                                          },
                                                                                          "version": 1
                                                                                        }
                                                                                  },
                                                                                  "type": "START_WORKFLOW"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "defaultCase": [],
                                                                        "evaluatorType": "value-param",
                                                                        "expression": "exists"
                                                                    }
                                                                ]
                                                            },
                                                            "defaultCase": [],
                                                            "evaluatorType": "value-param",
                                                            "expression": "exists"
                                                        },
                                                        {
                                                            "name": "Terminate Rule HTTP Stream Completed",
                                                            "taskReferenceName": "terminate_rule_http_stream_completed_ref",
                                                            "inputParameters": {
                                                                "terminationStatus": "COMPLETED"
                                                            },
                                                            "type": "TERMINATE",
                                                            "startDelay": 0,
                                                            "optional": false
                                                        }
                                                    ]
                                                },
                                                "startDelay": 0,
                                                "optional": false,
                                                "asyncComplete": false,
                                                "evaluatorType": "value-param",
                                                "expression": "switchCaseValue"
                                            }
                                        ],
                                        "407": [
                                            {
                                                "name": "Company JQ HTTP Stream Failed",
                                                "taskReferenceName": "company_jq_http_stream_failed_ref",
                                                "inputParameters": {
                                                    "id": "${workflow.input.ipa.idResult}",
                                                    "idIpa": "${workflow.input.ipa.id}",
                                                    "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                    "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                    "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                    "tipologia": "${workflow.input.ipa.tipologia}",
                                                    "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                    "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                    "acronimo": "${workflow.input.ipa.acronimo}",
                                                    "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                    "sorgente": "${workflow.input.ipa.sorgente}",
                                                    "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                                                    "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                                                    "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                                                    "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                                                    "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                                                    "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                                                    "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                                                    "status": "${crawler_http_stream_ref.output.response.body.result}",
                                                    "ruleName": "${workflow.input.rule_name}",
                                                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                    "workflow_child_id": "${workflow.workflowId}",
                                                    "error_message": "${crawler_http_stream_ref.output.response.body.message}",
                                                    "length": "${crawler_http_stream_ref.output.response.body.length}",
                                                    "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: .status, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName}"
                                                },
                                                "type": "JSON_JQ_TRANSFORM"
                                            },
                                            {
                                                "name": "Result HTTP Stream Failed",
                                                "taskReferenceName": "result_http_stream_failed_ref",
                                                "inputParameters": {
                                                    "http_request": {
                                                        "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                                        "body": "${company_jq_http_stream_failed_ref.output.result}",
                                                        "method": "${workflow.input.save_method}",
                                                        "connectionTimeOut": 10000,
                                                        "readTimeOut": 120000
                                                    }
                                                },
                                                "type": "HTTP",
                                                "startDelay": 0,
                                                "optional": true,
                                                "asyncComplete": false
                                            },
                                            {
                                                "name": "Terminate Result HTTP Stream Failed",
                                                "taskReferenceName": "terminate_result_http_stream_failed_ref",
                                                "inputParameters": {
                                                    "terminationStatus": "COMPLETED"
                                                },
                                                "type": "TERMINATE",
                                                "startDelay": 0,
                                                "optional": false
                                            }
                                        ]
                                    },
                                    "defaultCase": [],
                                    "startDelay": 0,
                                    "optional": false,
                                    "asyncComplete": false,
                                    "evaluatorType": "value-param",
                                    "expression": "switchCaseValue"
                                }
                            ],
                            "COMPLETED_WITH_ERRORS": [
                                {
                                    "name": "Company JQ HTTP Stream 407 Failed",
                                    "taskReferenceName": "company_jq_http_stream_407_failed_ref",
                                    "inputParameters": {
                                        "id": "${workflow.input.ipa.idResult}",
                                        "idIpa": "${workflow.input.ipa.id}",
                                        "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                        "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                        "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                        "tipologia": "${workflow.input.ipa.tipologia}",
                                        "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                        "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                        "acronimo": "${workflow.input.ipa.acronimo}",
                                        "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                        "sorgente": "${workflow.input.ipa.sorgente}",
                                        "status": "407",
                                        "ruleName": "${workflow.input.rule_name}",
                                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                        "workflow_child_id": "${workflow.workflowId}",
                                        "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, status: .status, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, ruleName: .ruleName}"
                                    },
                                    "type": "JSON_JQ_TRANSFORM"
                                },
                                {
                                    "name": "Result HTTP Stream 407 Failed",
                                    "taskReferenceName": "result_http_stream_407_failed_ref",
                                    "inputParameters": {
                                        "http_request": {
                                            "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                            "body": "${company_jq_http_stream_407_failed_ref.output.result}",
                                            "method": "${workflow.input.save_method}",
                                            "connectionTimeOut": 10000,
                                            "readTimeOut": 120000
                                        }
                                    },
                                    "type": "HTTP",
                                    "startDelay": 0,
                                    "optional": true,
                                    "asyncComplete": false
                                },
                                {
                                    "name": "Terminate Result HTTP Stream 407 Failed",
                                    "taskReferenceName": "terminate_result_http_stream_407_failed_ref",
                                    "inputParameters": {
                                        "terminationStatus": "COMPLETED"
                                    },
                                    "type": "TERMINATE",
                                    "startDelay": 0,
                                    "optional": false
                                }
                            ]
                        }
                    }
                ],
                "false": [
                    {
                        "name": "Sito Istituzionale Failed",
                        "taskReferenceName": "sito_istituzionale_jq_failed_ref",
                        "inputParameters": {
                            "id": "${workflow.input.ipa.idResult}",
                            "idIpa": "${workflow.input.ipa.id}",
                            "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                            "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                            "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                            "tipologia": "${workflow.input.ipa.tipologia}",
                            "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                            "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                            "acronimo": "${workflow.input.ipa.acronimo}",
                            "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                            "sorgente": "${workflow.input.ipa.sorgente}",
                            "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                            "ruleName": "${workflow.input.rule_name}",
                            "workflow_child_id": "${workflow.workflowId}",
                            "error_message": "URL del Sito Istituzionale non presente in IPA",
                            "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, status: 500, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, ruleName: .ruleName}"
                        },
                        "type": "JSON_JQ_TRANSFORM"
                    },
                    {
                        "name": "Result Sito Istituzionale Failed",
                        "taskReferenceName": "result_sito_istituzionale_failed_ref",
                        "inputParameters": {
                            "http_request": {
                                "uri": "${workflow.input.result_base_url}/result-service/v1/results",
                                "body": "${sito_istituzionale_jq_failed_ref.output.result}",
                                "method": "${workflow.input.save_method}",
                                "connectionTimeOut": 10000,
                                "readTimeOut": 120000
                            }
                        },
                        "type": "HTTP",
                        "startDelay": 0,
                        "optional": true,
                        "asyncComplete": false
                    },
                    {
                        "name": "Terminate Result Sito Istituzionale Failed",
                        "taskReferenceName": "terminate_result_sito_istituzionale_failed_ref",
                        "inputParameters": {
                            "terminationStatus": "COMPLETED"
                        },
                        "type": "TERMINATE",
                        "startDelay": 0,
                        "optional": false
                    }
                ]
            },
            "defaultCase": [],
            "evaluatorType": "value-param",
            "expression": "exists"
        }
    ],
    "inputParameters": [
        "ipa",
        "crawler_save_object",
        "crawler_save_screenshot",
        "parent_workflow_id",
        "save_method",
        "rule_name",
        "execute_child",
        "connection_timeout",
        "read_timeout",
        "crawling_mode",
        "result_base_url",
        "crawler_child_type"
    ],
    "outputParameters": {},
    "schemaVersion": 2,
    "restartable": true,
    "workflowStatusListenerEnabled": false,
    "ownerEmail": "marco.spasiano@gmail.com",
    "timeoutPolicy": "ALERT_ONLY",
    "timeoutSeconds": 0,
    "variables": {},
    "inputTemplate": {}
}