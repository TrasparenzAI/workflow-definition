{
  "createTime": 1706115292688,
  "updateTime": 1706474406146,
  "accessPolicy": {},
  "name": "Rule_Workflow",
  "description": "Rule Workflow",
  "version": 1,
  "tasks": [
    {
      "name": "Execute Rule",
      "taskReferenceName": "execute_rule_ref",
      "inputParameters": {
        "companies_count": "${workflow.input.companies.length()}"
      },
      "type": "DO_WHILE",
      "startDelay": 0,
      "optional": true,
      "asyncComplete": false,
      "loopCondition": "if ($.execute_rule_ref['iteration'] < $.companies_count ) { true; } else { false; }",
      "loopOver": [
        {
          "name": "IPA Task",
          "taskReferenceName": "ipa_ref",
          "inputParameters": {
            "companies": "${workflow.input.companies}",
            "queryExpression": ".companies |.[(${execute_rule_ref.output.iteration} - 1)]"
          },
          "type": "JSON_JQ_TRANSFORM"
        },
        {
          "name": "Crawler HTTP Stream",
          "taskReferenceName": "crawler_http_stream_ref",
          "inputParameters": {
            "http_request": {
              "uri": "https://dica33.ba.cnr.it/crawler/crawl",
              "body": "{\"crawlingMode\": \"httpStream\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":${workflow.input.crawler_save_screenshot},\"url\": \"${ipa_ref.output.result.sitoIstituzionale}\"}",
              "method": "POST",
              "connectionTimeOut": 10000,
              "readTimeOut": 60000
            }
          },
          "type": "HTTP"
        },
        {
          "name": "Switch Crawler HTTP Stream",
          "taskReferenceName": "switch_crawler_http_stream_ref",
          "inputParameters": {
            "switchCaseValue": "${crawler_http_stream_ref.output.response.body.result}"
          },
          "type": "SWITCH",
          "decisionCases": {
            "407": [
              {
                "name": "Company JQ HTTP Stream Failed",
                "taskReferenceName": "company_jq_http_stream_failed_ref",
                "inputParameters": {
                  "idIpa": "${ipa_ref.output.result.id}",
                  "codiceIpa": "${ipa_ref.output.result.codiceIpa}",
                  "denominazioneEnte": "${ipa_ref.output.result.denominazioneEnte}",
                  "codiceFiscaleEnte": "${ipa_ref.output.result.codiceFiscaleEnte}",
                  "tipologia": "${ipa_ref.output.result.tipologia}",
                  "codiceCategoria": "${ipa_ref.output.result.codiceCategoria}",
                  "codiceNatura": "${ipa_ref.output.result.codiceNatura}",
                  "acronimo": "${ipa_ref.output.result.acronimo}",
                  "sitoIstituzionale": "${ipa_ref.output.result.sitoIstituzionale}",
                  "sorgente": "${ipa_ref.output.result.sorgente}",
                  "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                  "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                  "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                  "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                  "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                  "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                  "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                  "status": "${crawler_http_stream_ref.output.response.body.result}",
                  "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                  "workflow_child_id" : "${workflow.workflowId}",
                  "error_message" : "${crawler_http_stream_ref.output.response.body.message}",
                  "length" : "${crawler_http_stream_ref.output.response.body.length}",
                  "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: .status, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length}"
                },
                "type": "JSON_JQ_TRANSFORM"
              },              
              {
                "name": "Result HTTP Stream Failed",
                "taskReferenceName": "result_http_stream_failed_ref",
                "inputParameters": {
                  "http_request": {
                    "uri": "https://dica33.ba.cnr.it/result-service/v1/results",
                    "body": "${company_jq_http_stream_failed_ref.output.result}",
                    "method": "PUT",
                    "connectionTimeOut": 10000,
                    "readTimeOut": 30000
                  }
                },
                "type": "HTTP",
                "startDelay": 0,
                "optional": true,
                "asyncComplete": false
              }              
            ],
            "200": [
              {
                "name": "Rule HTTP Stream",
                "taskReferenceName": "rule_http_stream_ref",
                "inputParameters": {
                  "http_request": {
                    "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules",
                    "body": "${crawler_http_stream_ref.output.response.body.htmlPage}",
                    "method": "POST",
                    "connectionTimeOut": 1000,
                    "readTimeOut": 5000
                  }
                },
                "type": "HTTP",
                "startDelay": 0,
                "optional": true,
                "asyncComplete": false
              },
              {
                "name": "Switch Rule HTTP Stream",
                "taskReferenceName": "switch_rule_http_stream_ref",
                "inputParameters": {
                  "switchCaseValue": "${rule_http_stream_ref.status}"
                },
                "type": "SWITCH",
                "decisionCases": {
                  "COMPLETED_WITH_ERRORS": [
                    {
                      "name": "Crawler HTML Source",
                      "taskReferenceName": "crawler_html_source_ref",
                      "inputParameters": {
                        "http_request": {
                          "uri": "https://dica33.ba.cnr.it/crawler/crawl",
                          "body": "{\"crawlingMode\": \"htmlSource\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":${workflow.input.crawler_save_screenshot},\"url\": \"${ipa_ref.output.result.sitoIstituzionale}\"}",
                          "method": "POST",
                          "connectionTimeOut": 10000,
                          "readTimeOut": 60000
                        }
                      },
                      "type": "HTTP",
                      "startDelay": 0,
                      "optional": true,
                      "asyncComplete": false
                    },
                    {
                      "name": "Rule HTML Source",
                      "taskReferenceName": "rule_html_source_ref",
                      "inputParameters": {
                        "http_request": {
                          "uri": "https://dica33.ba.cnr.it/rule-service/v1/rules",
                          "body": "${crawler_html_source_ref.output.response.body.htmlPage}",
                          "method": "POST",
                          "connectionTimeOut": 1000,
                          "readTimeOut": 1000
                        }
                      },
                      "type": "HTTP",
                      "startDelay": 0,
                      "optional": true,
                      "asyncComplete": false
                    },
                    {
                      "name": "Switch Rule HTML Source",
                      "taskReferenceName": "switch_rule_html_source_ref",
                      "inputParameters": {
                        "switchCaseValue": "${rule_html_source_ref.status}"
                      },
                      "type": "SWITCH",
                      "decisionCases": {
                        "COMPLETED_WITH_ERRORS": [
                          {
                            "name": "Company JQ HTML Source Failed",
                            "taskReferenceName": "company_jq_html_source_failed_ref",
                            "inputParameters": {
                              "idIpa": "${ipa_ref.output.result.id}",
                              "codiceIpa": "${ipa_ref.output.result.codiceIpa}",
                              "denominazioneEnte": "${ipa_ref.output.result.denominazioneEnte}",
                              "codiceFiscaleEnte": "${ipa_ref.output.result.codiceFiscaleEnte}",
                              "tipologia": "${ipa_ref.output.result.tipologia}",
                              "codiceCategoria": "${ipa_ref.output.result.codiceCategoria}",
                              "codiceNatura": "${ipa_ref.output.result.codiceNatura}",
                              "acronimo": "${ipa_ref.output.result.acronimo}",
                              "sitoIstituzionale": "${ipa_ref.output.result.sitoIstituzionale}",
                              "sorgente": "${ipa_ref.output.result.sorgente}",
                              "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                              "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                              "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                              "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                              "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                              "screenshotId": "${crawler_html_source_ref.output.response.body.screenshotId}",
                              "screenshotResult": "${crawler_html_source_ref.output.response.body.screenshotResult}",
                              "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                              "workflow_child_id" : "${workflow.workflowId}",
                              "error_message" : "${crawler_html_source_ref.output.response.body.message}",
                              "length" : "${crawler_html_source_ref.output.response.body.length}",
                              "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 400, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length }"
                            },
                            "type": "JSON_JQ_TRANSFORM"
                          },
                          {
                            "name": "Result Rule HTML Source Failed",
                            "taskReferenceName": "result_rule_html_source_failed_ref",
                            "inputParameters": {
                              "http_request": {
                                "uri": "https://dica33.ba.cnr.it/result-service/v1/results",
                                "body": "${company_jq_html_source_failed_ref.output.result}",
                                "method": "PUT",
                                "connectionTimeOut": 10000,
                                "readTimeOut": 30000
                              }
                            },
                            "type": "HTTP",
                            "startDelay": 0,
                            "optional": false,
                            "asyncComplete": false
                          }
                        ],
                        "COMPLETED": [
                          {
                            "name": "Company JQ HTML Source Completed",
                            "taskReferenceName": "company_jq_html_source_completed_ref",
                            "inputParameters": {
                              "idIpa": "${ipa_ref.output.result.id}",
                              "codiceIpa": "${ipa_ref.output.result.codiceIpa}",
                              "denominazioneEnte": "${ipa_ref.output.result.denominazioneEnte}",
                              "codiceFiscaleEnte": "${ipa_ref.output.result.codiceFiscaleEnte}",
                              "tipologia": "${ipa_ref.output.result.tipologia}",
                              "codiceCategoria": "${ipa_ref.output.result.codiceCategoria}",
                              "codiceNatura": "${ipa_ref.output.result.codiceNatura}",
                              "acronimo": "${ipa_ref.output.result.acronimo}",
                              "sitoIstituzionale": "${ipa_ref.output.result.sitoIstituzionale}",
                              "sorgente": "${ipa_ref.output.result.sorgente}",
                              "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                              "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                              "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                              "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                              "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                              "screenshotId": "${crawler_html_source_ref.output.response.body.screenshotId}",
                              "screenshotResult": "${crawler_html_source_ref.output.response.body.screenshotResult}",
                              "url": "${rule_html_source_ref.output.response.body.url}",
                              "ruleName": "${rule_html_source_ref.output.response.body.ruleName}",
                              "term": "${rule_html_source_ref.output.response.body.term}",
                              "content": "${rule_html_source_ref.output.response.body.content}",
                              "status": "${rule_html_source_ref.output.response.body.status}",
                              "score": "${rule_html_source_ref.output.response.body.score}",
                              "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                              "leaf": "${rule_html_source_ref.output.response.body.isLeaf}",
                              "workflow_child_id" : "${workflow.workflowId}",
                              "error_message" : "${crawler_html_source_ref.output.response.body.message}",
                              "length" : "${crawler_html_source_ref.output.response.body.length}",
                              "where": "${rule_html_source_ref.output.response.body.where}",
                              "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, url: .url, ruleName: .ruleName, term: .term, content: .content, status: .status, score: .score, workflowId: .parent_workflow_id, leaf: .leaf, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, where: .where }"
                            },
                            "type": "JSON_JQ_TRANSFORM"
                          },                          
                          {
                            "name": "Result Rule HTML Source Completed",
                            "taskReferenceName": "result_rule_html_source_completed_ref",
                            "inputParameters": {
                              "http_request": {
                                "uri": "https://dica33.ba.cnr.it/result-service/v1/results",
                                "body": "${company_jq_html_source_completed_ref.output.result}",
                                "method": "PUT",
                                "connectionTimeOut": 10000,
                                "readTimeOut": 30000
                              }
                            },
                            "type": "HTTP",
                            "startDelay": 0,
                            "optional": false,
                            "asyncComplete": false
                          }
                        ]
                      },
                      "startDelay": 0,
                      "optional": false,
                      "asyncComplete": false,
                      "evaluatorType": "value-param",
                      "expression": "switchCaseValue"
                    }
                  ],
                  "COMPLETED": [
                    {
                      "name": "Company JQ HTTP Stream Completed",
                      "taskReferenceName": "company_jq_http_stream_completed_ref",
                      "inputParameters": {
                        "idIpa": "${ipa_ref.output.result.id}",
                        "codiceIpa": "${ipa_ref.output.result.codiceIpa}",
                        "denominazioneEnte": "${ipa_ref.output.result.denominazioneEnte}",
                        "codiceFiscaleEnte": "${ipa_ref.output.result.codiceFiscaleEnte}",
                        "tipologia": "${ipa_ref.output.result.tipologia}",
                        "codiceCategoria": "${ipa_ref.output.result.codiceCategoria}",
                        "codiceNatura": "${ipa_ref.output.result.codiceNatura}",
                        "acronimo": "${ipa_ref.output.result.acronimo}",
                        "sitoIstituzionale": "${ipa_ref.output.result.sitoIstituzionale}",
                        "sorgente": "${ipa_ref.output.result.sorgente}",
                        "realUrl": "${crawler_http_stream_ref.output.response.body.realUrl}",
                        "objectBucket": "${crawler_http_stream_ref.output.response.body.objectBucket}",
                        "objectId": "${crawler_http_stream_ref.output.response.body.objectId}",
                        "objectResult": "${crawler_http_stream_ref.output.response.body.objectResult}",
                        "screenshotBucket": "${crawler_http_stream_ref.output.response.body.screenshotBucket}",
                        "screenshotId": "${crawler_http_stream_ref.output.response.body.screenshotId}",
                        "screenshotResult": "${crawler_http_stream_ref.output.response.body.screenshotResult}",
                        "url": "${rule_http_stream_ref.output.response.body.url}",
                        "ruleName": "${rule_http_stream_ref.output.response.body.ruleName}",
                        "term": "${rule_http_stream_ref.output.response.body.term}",
                        "content": "${rule_http_stream_ref.output.response.body.content}",
                        "status": "${rule_http_stream_ref.output.response.body.status}",
                        "score": "${rule_http_stream_ref.output.response.body.score}",
                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                        "leaf": "${rule_http_stream_ref.output.response.body.isLeaf}",
                        "workflow_child_id" : "${workflow.workflowId}",
                        "error_message" : "${rule_http_stream_ref.output.response.body.message}",
                        "length" : "${crawler_http_stream_ref.output.response.body.length}",
                        "where": "${rule_http_stream_ref.output.response.body.where}",
                        "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, url: .url, ruleName: .ruleName, term: .term, content: .content, status: .status, score: .score, workflowId: .parent_workflow_id, leaf: .leaf, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, where: .where }"
                      },
                      "type": "JSON_JQ_TRANSFORM"
                    },
                    {
                      "name": "Result Rule HTTP Stream Completed",
                      "taskReferenceName": "result_rule_http_stream_completed_ref",
                      "inputParameters": {
                        "http_request": {
                          "uri": "https://dica33.ba.cnr.it/result-service/v1/results",
                          "body": "${company_jq_http_stream_completed_ref.output.result}",
                          "method": "PUT",
                          "connectionTimeOut": 10000,
                          "readTimeOut": 30000
                        }
                      },
                      "type": "HTTP",
                      "startDelay": 0,
                      "optional": false,
                      "asyncComplete": false
                    }
                  ]
                },
                "startDelay": 0,
                "optional": false,
                "asyncComplete": false,
                "evaluatorType": "value-param",
                "expression": "switchCaseValue"
              }
            ]
          },
          "defaultCase": [],
          "startDelay": 0,
          "optional": false,
          "asyncComplete": false,
          "evaluatorType": "value-param",
          "expression": "switchCaseValue"
        }
      ]
    }
  ],
  "inputParameters": [
    "companies",
    "crawler_save_object",
    "crawler_save_screenshot",
    "parent_workflow_id"
  ],
  "outputParameters": {},
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "ownerEmail": "marco.spasiano@gmail.com",
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {}
}