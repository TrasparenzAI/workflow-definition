{
  "createTime": 1706115292688,
  "updateTime": 1706474406146,
  "accessPolicy": {},
  "name": "rule_workflow",
  "description": "Rule Workflow",
  "version": 1,
  "tasks": [
    {
      "name": "Companies Present",
      "taskReferenceName": "companies_present_ref",
      "inputParameters": {
        "expression": "(function(){ if ($.s.length > 0){return true;} else { return false;} })();",
        "evaluatorType": "javascript",
        "s": "${workflow.input.companies}"
      },
      "type": "INLINE"
    },
    {
      "name": "SWITCH Companies Present",
      "taskReferenceName": "switch_companies_present_ref",
      "inputParameters": {
        "size": "${companies_present_ref.output.result}"
      },
      "type": "SWITCH",
      "decisionCases": {
        "true": [
          {
            "name": "Execute Rule",
            "taskReferenceName": "execute_rule_ref",
            "inputParameters": {
              "companies_count": "${workflow.input.companies.length()}"
            },
            "type": "DO_WHILE",
            "startDelay": 0,
            "optional": true,
            "asyncComplete": false,
            "loopCondition": "if ($.execute_rule_ref['iteration'] < $.companies_count ) { true; } else { false; }",
            "loopOver": [
              {
                  "name": "INDEX DO While Execute Rule",
                  "taskReferenceName": "index_do_while_execute_rule_ref",
                  "inputParameters": {
                      "expression": "(function(){ return $.s; })();",
                      "evaluatorType": "javascript",
                      "s": "${execute_rule_ref.output.iteration}"
                  },
                  "type": "INLINE"
              },
              {
                "name": "IPA Task",
                "taskReferenceName": "ipa_ref",
                "inputParameters": {
                  "companies": "${workflow.input.companies}",
                  "queryExpression": ".companies |.[(${index_do_while_execute_rule_ref.output.result} - 1)]"
                },
                "type": "JSON_JQ_TRANSFORM",
                "optional": true
              },
              {
                "name": "switch_save_method",
                "taskReferenceName": "switch_save_method_ref",
                "inputParameters": {
                  "method": "${workflow.input.save_method}"
                },
                "defaultCase": [],
                "evaluatorType": "value-param",
                "expression": "method",          
                "type": "SWITCH",
                "decisionCases": {
                  "POST": [
                    {
                        "name": "Result Trasform",
                        "taskReferenceName": "result_trasform_ref",
                        "inputParameters": {
                            "idResult": "${ipa_ref.output.result.id}",
                            "idIpa": "${ipa_ref.output.result.company.idIpa}",
                            "codiceIpa": "${ipa_ref.output.result.company.codiceIpa}",
                            "denominazioneEnte": "${ipa_ref.output.result.company.denominazioneEnte}",
                            "codiceFiscaleEnte": "${ipa_ref.output.result.company.codiceFiscaleEnte}",
                            "tipologia": "${ipa_ref.output.result.company.tipologia}",
                            "codiceCategoria": "${ipa_ref.output.result.company.codiceCategoria}",
                            "codiceNatura": "${ipa_ref.output.result.company.codiceNatura}",
                            "acronimo": "${ipa_ref.output.result.company.acronimo}",
                            "sitoIstituzionale": "${ipa_ref.output.result.company.sitoIstituzionale}",
                            "sorgente": "${ipa_ref.output.result.company.sorgente}",
                            "queryExpression": "{idResult: .idResult, id: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente}"
                        },
                        "type": "JSON_JQ_TRANSFORM"
                    },          
                    {
                        "name": "Manage Rule",
                        "taskReferenceName": "manage_rule_ref",
                        "inputParameters": {
                            "expression": "(function(){ if (!$.rule || $.rule.length == 0 || $.rule == $.main_rule){return {'main_rule': true};} else { return {'main_rule': false, 'rule_name': $.rule.replace('/child','')};} })();",
                            "evaluatorType": "javascript",
                            "rule": "${ipa_ref.output.result.ruleName}",
                            "main_rule": "${workflow.input.rule_name}"
                        },
                        "type": "INLINE",
                        "optional": true
                    },
                    {
                    "name": "switch_rule_method",
                    "taskReferenceName": "switch_rule_method_ref",
                    "inputParameters": {
                      "method": "${manage_rule_ref.output.result.main_rule}"
                    },
                    "defaultCase": [],
                    "evaluatorType": "value-param",
                    "expression": "method",
                    "type": "SWITCH",
                    "decisionCases": {
                        "true": [
                          {
                            "name": "Start Result Rule Detail Workflow",
                            "taskReferenceName": "start_result_rule_detail_workflow_ref",
                            "inputParameters": {
                              "ipa": "${result_trasform_ref.output.result}",
                              "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                              "crawler_save_object": "${workflow.input.crawler_save_object}",
                              "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                              "save_method": "${workflow.input.save_method}",
                              "rule_name": "${workflow.input.rule_name}",
                              "execute_child": "${workflow.input.execute_child}",
                              "connection_timeout": "${workflow.input.connection_timeout}",
                              "read_timeout": "${workflow.input.read_timeout}",
                              "crawling_mode": "${workflow.input.crawling_mode}",
                              "result_base_url": "${workflow.input.result_base_url}",
                              "crawler_child_type": "${workflow.input.crawler_child_type}",
                              "crawler_uri": "${workflow.input.crawler_uri}"
                            },
                            "subWorkflowParam": {
                              "name": "rule_detail_workflow",
                              "version": 1
                            },                
                            "type": "SUB_WORKFLOW",
                            "optional": true
                          }                          
                        ],
                        "false": [
                          {
                              "name": "Manage Real URL",
                              "taskReferenceName": "manage_real_url_ref",
                              "inputParameters": {
                                  "expression": "(function(){ if ($.url.length > 0 && $.url.startsWith('http')){return true;} else { return false;} })();",
                                  "evaluatorType": "javascript",
                                  "url": "${ipa_ref.output.result.realUrl}"
                              },
                              "type": "INLINE"
                          },
                          {
                            "name": "Switch URL present",
                            "taskReferenceName": "switch_url_present_ref",
                            "inputParameters": {
                              "url_present": "${manage_real_url_ref.output.result}"
                            },
                            "defaultCase": [],
                            "evaluatorType": "value-param",
                            "expression": "url_present",          
                            "type": "SWITCH",
                            "decisionCases": {
                              "true": [
                                {
                                  "name": "Result Delete",
                                  "taskReferenceName": "result_delete_ref",
                                  "inputParameters": {
                                      "http_request": {
                                          "uri": "${workflow.input.result_base_url}/${ipa_ref.output.result.id}",
                                          "method": "DELETE",
                                          "connectionTimeOut": 10000,
                                          "readTimeOut": 120000
                                      }
                                  },
                                  "type": "HTTP",
                                  "startDelay": 0,
                                  "optional": true,
                                  "asyncComplete": false
                                },
                                {
                                  "name": "Company JQ Transform",
                                  "taskReferenceName": "company_jq_transform_ref",
                                  "inputParameters": {
                                    "codiceIpa": "${ipa_ref.output.result.company.codiceIpa}",
                                    "codiceCategoria": "${ipa_ref.output.result.company.codiceCategoria}",
                                    "codiceFiscaleEnte": "${ipa_ref.output.result.company.codiceFiscaleEnte}",
                                    "denominazioneEnte": "${ipa_ref.output.result.company.denominazioneEnte}",
                                    "tipologia": "${ipa_ref.output.result.company.tipologia}",
                                    "codiceNatura": "${ipa_ref.output.result.company.codiceNatura}",
                                    "acronimo": "${ipa_ref.output.result.company.acronimo}",
                                    "sitoIstituzionale": "${ipa_ref.output.result.company.sitoIstituzionale}",
                                    "idIpa": "${ipa_ref.output.result.company.idIpa}",
                                    "sorgente": "${ipa_ref.output.result.company.sorgente}",
                                    "queryExpression": "{id: .idIpa, idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }"
                                  },
                                  "type": "JSON_JQ_TRANSFORM",
                                  "optional": true,
                                  "asyncComplete": false
                                },                                                    
                                {
                                  "name": "Start Rule Child Workflow",
                                  "taskReferenceName": "start_rule_child_workflow_ref",
                                  "inputParameters": {
                                      "startWorkflow": {
                                        "name": "rule_detail_child_workflow",
                                        "input": {
                                          "ipa": "${company_jq_transform_ref.output.result}",
                                          "resultURL": "${ipa_ref.output.result.realUrl}",
                                          "rule_name": "${manage_rule_ref.output.result.rule_name}",
                                          "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                          "crawler_save_object": "${workflow.input.crawler_save_object}",
                                          "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                          "save_method": "PUT",
                                          "connection_timeout": "${workflow.input.connection_timeout}",
                                          "read_timeout": "${workflow.input.read_timeout}",
                                          "crawling_mode": "${workflow.input.crawling_mode}",
                                          "result_base_url": "${workflow.input.result_base_url}",
                                          "crawler_uri": "${workflow.input.crawler_uri}"
                                        },
                                        "version": 1
                                      }
                                  },
                                  "type": "START_WORKFLOW",
                                  "optional": true
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "PUT": [
                    {
                      "name": "Start Rule Detail Workflow",
                      "taskReferenceName": "start_rule_detail_workflow_ref",
                      "inputParameters": {
                        "ipa": "${ipa_ref.output.result}",
                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                        "crawler_save_object": "${workflow.input.crawler_save_object}",
                        "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                        "save_method": "${workflow.input.save_method}",
                        "rule_name": "${workflow.input.rule_name}",
                        "execute_child": "${workflow.input.execute_child}",
                        "connection_timeout": "${workflow.input.connection_timeout}",
                        "read_timeout": "${workflow.input.read_timeout}",
                        "crawling_mode": "${workflow.input.crawling_mode}",
                        "result_base_url": "${workflow.input.result_base_url}",
                        "crawler_child_type": "${workflow.input.crawler_child_type}",
                        "crawler_uri": "${workflow.input.crawler_uri}"
                      },
                      "subWorkflowParam": {
                        "name": "rule_detail_workflow",
                        "version": 1
                      },                
                      "type": "SUB_WORKFLOW",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "defaultCase": [],
      "evaluatorType": "value-param",
      "expression": "size"
    }
  ],
  "inputParameters": [
    "companies",
    "crawler_save_object",
    "crawler_save_screenshot",
    "parent_workflow_id",
    "save_method",
    "rule_name",
    "execute_child",
    "connection_timeout",
    "read_timeout",
    "crawling_mode",
    "result_base_url",
    "crawler_child_type",
    "crawler_uri"
  ],
  "outputParameters": {},
  "schemaVersion": 2,
  "restartable": true,
  "workflowStatusListenerEnabled": false,
  "ownerEmail": "marco.spasiano@gmail.com",
  "timeoutPolicy": "ALERT_ONLY",
  "timeoutSeconds": 0,
  "variables": {},
  "inputTemplate": {}
}