{
    "createTime": 1706115292688,
    "updateTime": 1706474406146,
    "accessPolicy": {},
    "name": "rule_detail_child_html_source_workflow",
    "description": "Rule Detail Child HTML Source Workflow",
    "version": 1,
    "tasks": [
        {
            "name": "Child Rule",
            "taskReferenceName": "child_rule_ref",
            "inputParameters": {
                "expression": "(function(){ if ($.rule_name == $.root_rule){return $.base_rule_name + '/child';} else { return $.rule_name + '/child';} })();",
                "evaluatorType": "javascript",
                "base_rule_name": "${workflow.input.base_rule_name}",                
                "rule_name": "${workflow.input.rule_name}",
                "root_rule": "${workflow.input.root_rule}"
            },
            "type": "INLINE"
        },        
        {
            "name": "Crawler HTML Source",
            "taskReferenceName": "crawler_html_source_ref",
            "inputParameters": {
                "http_request": {
                    "uri": "${workflow.input.crawler_uri}",
                    "body": "{\"crawlingMode\": \"htmlSource\", \"saveObject\": ${workflow.input.crawler_save_object}, \"saveScreenshot\":${workflow.input.crawler_save_screenshot},\"url\": \"${workflow.input.resultURL}\"}",
                    "method": "POST",
                    "connectionTimeOut": "${workflow.input.connection_timeout}",
                    "readTimeOut": "${workflow.input.read_timeout}"
                }   
            },
            "type": "HTTP_WEBCLIENT",
            "decisionCases": {},
            "defaultCase": [],
            "forkTasks": [],
            "startDelay": 0,
            "joinOn": [],
            "optional": true,
            "defaultExclusiveJoinTask": [],
            "asyncComplete": false,
            "loopOver": [],
            "onStateChange": {}
        },
        {
          "name": "Switch Crawler HTTP Stream Completed",
          "taskReferenceName": "switch_crawler_http_stream_completed_ref",
          "inputParameters": {
            "switchCaseValue": "${crawler_html_source_ref.status}"
          },
          "type": "SWITCH",
          "decisionCases": {
            "COMPLETED": [
                {
                    "name": "Switch Crawler HTML Source",
                    "taskReferenceName": "switch_crawler_html_source_ref",
                    "inputParameters": {
                        "switchCaseValue": "${crawler_html_source_ref.output.response.body.result}"
                    },
                    "type": "SWITCH",
                    "decisionCases": {
                        "200": [
                            {
                                "name": "Rule HTML Source",
                                "taskReferenceName": "rule_html_source_ref",
                                "inputParameters": {
                                    "http_request": {
                                        "uri": "${workflow.input.rule_base_url}/v1/rules/child?rootRule=${workflow.input.root_rule}&ruleName=${workflow.input.rule_name}&forceJsoup=${workflow.input.force_jsoup}",
                                        "body": "${crawler_html_source_ref.output.response.body.htmlPage}",
                                        "method": "POST",
                                        "connectionTimeOut": 1000,
                                        "readTimeOut": 10000
                                    }
                                },
                                "type": "HTTP_WEBCLIENT",
                                "optional": true,
                                "asyncComplete": false
                            },
                            {
                                "name": "Switch Rule HTML Source",
                                "taskReferenceName": "switch_rule_html_source_ref",
                                "inputParameters": {
                                    "switchCaseValue": "${rule_html_source_ref.status}"
                                },
                                "type": "SWITCH",
                                "decisionCases": {
                                    "COMPLETED_WITH_ERRORS": [
                                        {
                                            "name": "Company JQ HTML Source Failed",
                                            "taskReferenceName": "company_jq_html_source_failed_ref",
                                            "inputParameters": {
                                                "id": "${workflow.input.ipa.idResult}",
                                                "idIpa": "${workflow.input.ipa.id}",
                                                "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                "tipologia": "${workflow.input.ipa.tipologia}",
                                                "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                "acronimo": "${workflow.input.ipa.acronimo}",
                                                "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                "sorgente": "${workflow.input.ipa.sorgente}",
                                                "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                                "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                                "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                                "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                                "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                                "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                                "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                "workflow_child_id": "${workflow.workflowId}",
                                                "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                                "length": "${crawler_html_source_ref.output.response.body.length}",
                                                "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 400, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }",
                                                "ruleName": "${child_rule_ref.output.result}"
                                            },
                                            "type": "JSON_JQ_TRANSFORM",
                                            "decisionCases": {},
                                            "defaultCase": [],
                                            "forkTasks": [],
                                            "startDelay": 0,
                                            "joinOn": [],
                                            "optional": true,
                                            "defaultExclusiveJoinTask": [],
                                            "asyncComplete": false,
                                            "loopOver": [],
                                            "onStateChange": {}
                                        },
                                        {
                                            "name": "Result Rule HTML Source Failed",
                                            "taskReferenceName": "result_rule_html_source_failed_ref",
                                            "inputParameters": {
                                                "http_request": {
                                                    "uri": "${workflow.input.result_base_url}/v1/results",
                                                    "body": "${company_jq_html_source_failed_ref.output.result}",
                                                    "method": "PUT",
                                                    "connectionTimeOut": 120000,
                                                    "readTimeOut": 120000
                                                }
                                            },
                                            "type": "HTTP_WEBCLIENT",
                                            "optional": true,
                                            "asyncComplete": false
                                        },
                                        {
                                            "name": "Terminate Rule HTML Source Failed",
                                            "taskReferenceName": "terminate_rule_html_source_failed_ref",
                                            "inputParameters": {
                                                "terminationStatus": "COMPLETED"
                                            },
                                            "type": "TERMINATE",
                                            "decisionCases": {},
                                            "defaultCase": [],
                                            "forkTasks": [],
                                            "startDelay": 0,
                                            "joinOn": [],
                                            "optional": false,
                                            "defaultExclusiveJoinTask": [],
                                            "asyncComplete": false,
                                            "loopOver": [],
                                            "onStateChange": {}
                                        }
                                    ],
                                    "COMPLETED": [
                                        {
                                            "name": "Start Rule HTML Source decide",
                                            "taskReferenceName": "start_rule_decide_workflow_ref",
                                            "inputParameters": {
                                              "resultRuleCreateDtos": "${rule_html_source_ref.output.response.body}",
                                              "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                              "rule_name": "${workflow.input.rule_name}",
                                              "root_rule": "${workflow.input.root_rule}",
                                              "execute_child": "${workflow.input.execute_child}",
                                              "connection_timeout": "${workflow.input.connection_timeout}",
                                              "read_timeout": "${workflow.input.read_timeout}",
                                              "crawling_mode": "${workflow.input.crawling_mode}",
                                              "result_base_url": "${workflow.input.result_base_url}",
                                              "crawler_child_type": "${workflow.input.crawler_child_type}",
                                              "crawler_uri": "${workflow.input.crawler_uri}",
                                              "rule_base_url": "${workflow.input.rule_base_url}",
                                              "force_jsoup": "${workflow.input.force_jsoup}"
                                            },
                                            "subWorkflowParam": {
                                              "name": "rule_decide_workflow",
                                              "version": 1
                                            },                
                                            "type": "SUB_WORKFLOW",
                                            "optional": true
                                        },
                                        {
                                            "name": "Company JQ HTML Source Completed",
                                            "taskReferenceName": "company_jq_html_source_completed_ref",
                                            "inputParameters": {
                                                "id": "${workflow.input.ipa.idResult}",
                                                "idIpa": "${workflow.input.ipa.id}",
                                                "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                                "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                                "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                                "tipologia": "${workflow.input.ipa.tipologia}",
                                                "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                                "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                                "acronimo": "${workflow.input.ipa.acronimo}",
                                                "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                                "sorgente": "${workflow.input.ipa.sorgente}",
                                                "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                                "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                                "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                                "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                                "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                                "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                                "realUrl": "${crawler_html_source_ref.output.response.body.realUrl}",
                                                "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                "workflow_child_id": "${workflow.workflowId}",
                                                "length": "${crawler_html_source_ref.output.response.body.length}",
                                                "resultRuleCreateDtos": "${start_rule_decide_workflow_ref.output.resultRuleCreateDtos}",
                                                "queryExpression": "{company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, resultRuleCreateDtos: .resultRuleCreateDtos, realUrl: .realUrl, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length }"
                                            },
                                            "type": "JSON_JQ_TRANSFORM",
                                            "decisionCases": {},
                                            "defaultCase": [],
                                            "forkTasks": [],
                                            "startDelay": 0,
                                            "joinOn": [],
                                            "optional": true,
                                            "defaultExclusiveJoinTask": [],
                                            "asyncComplete": false,
                                            "loopOver": [],
                                            "onStateChange": {}
                                        },
                                        {
                                            "name": "Result Rule HTML Source Completed",
                                            "taskReferenceName": "result_rule_html_source_completed_ref",
                                            "inputParameters": {
                                                "http_request": {
                                                    "uri": "${workflow.input.result_base_url}/v1/results/bulk",
                                                    "body": "${company_jq_html_source_completed_ref.output.result}",
                                                    "method": "PUT",
                                                    "connectionTimeOut": 120000,
                                                    "readTimeOut": 120000
                                                }
                                            },
                                            "type": "HTTP_WEBCLIENT",
                                            "optional": true,
                                            "asyncComplete": false
                                        },
                                        {
                                          "name": "Switch Result Rule HTML Source Completed",
                                          "taskReferenceName": "switch_result_rule_html_source_completed_ref",
                                          "inputParameters": {
                                            "switchCaseValue": "${result_rule_html_source_completed_ref.status}"
                                          },
                                          "type": "SWITCH",
                                          "optional": true,
                                          "asyncComplete": false,
                                          "evaluatorType": "value-param",
                                          "expression": "switchCaseValue",
                                          "decisionCases": {
                                            "COMPLETED": [
                                                {
                                                    "name": "Result JQ HTML Source Completed Filter",
                                                    "taskReferenceName": "result_jq_html_source_completed_filter_ref",
                                                    "inputParameters": {
                                                        "results": "${result_rule_html_source_completed_ref.output.response.body}",
                                                        "queryExpression": "[.results[] | select (.leaf == false and (.status == 200 or .status == 202))]"
                                                    },
                                                    "type": "JSON_JQ_TRANSFORM"
                                                },
                                                {
                                                    "name": "HTML Source Leaf",
                                                    "taskReferenceName": "html_source_leaf_ref",
                                                    "inputParameters": {
                                                        "expression": "(function(){ if ($.s > 0){return true;} else { return false;} })();",
                                                        "evaluatorType": "javascript",
                                                        "s": "${result_jq_html_source_completed_filter_ref.output.result.length()}"
                                                    },
                                                    "type": "INLINE"
                                                },
                                                {
                                                    "name": "SWITCH HTML Source Leaf",
                                                    "taskReferenceName": "switch_html_source_leaf_ref",
                                                    "inputParameters": {
                                                        "exists": "${html_source_leaf_ref.output.result}"
                                                    },
                                                    "type": "SWITCH",
                                                    "decisionCases": {
                                                        "true": [
                                                            {
                                                                "name": "DO While HTML Source Rule",
                                                                "taskReferenceName": "do_while_htmlsource_rule_ref",
                                                                "inputParameters": {
                                                                    "rule_count": "${result_jq_html_source_completed_filter_ref.output.result.length()}"
                                                                },
                                                                "type": "DO_WHILE",
                                                                "decisionCases": {},
                                                                "defaultCase": [],
                                                                "forkTasks": [],
                                                                "startDelay": 0,
                                                                "joinOn": [],
                                                                "optional": true,
                                                                "defaultExclusiveJoinTask": [],
                                                                "asyncComplete": false,
                                                                "loopCondition": "(function () {if ($.do_while_htmlsource_rule_ref['iteration'] < $.rule_count) {    return true;  }  return false;})();",
                                                                "loopOver": [
                                                                    {
                                                                        "name": "INDEX DO While HTML Source Rule",
                                                                        "taskReferenceName": "index_do_while_htmlsource_rule_ref",
                                                                        "inputParameters": {
                                                                            "expression": "(function(){ return $.s; })();",
                                                                            "evaluatorType": "javascript",
                                                                            "s": "${do_while_htmlsource_rule_ref.output.iteration}"
                                                                        },
                                                                        "type": "INLINE",
                                                                        "retryCount": 0
                                                                    },
                                                                    {
                                                                        "name": "Rule HTML Source JSON Transform",
                                                                        "taskReferenceName": "rule_html_source_json_transform_ref",
                                                                        "inputParameters": {
                                                                            "rules": "${result_jq_html_source_completed_filter_ref.output.result}",
                                                                            "queryExpression": ".rules | .[${index_do_while_htmlsource_rule_ref.output.result} - 1:${index_do_while_htmlsource_rule_ref.output.result}]| .[]"
                                                                        },
                                                                        "type": "JSON_JQ_TRANSFORM",
                                                                        "decisionCases": {},
                                                                        "defaultCase": [],
                                                                        "forkTasks": [],
                                                                        "startDelay": 0,
                                                                        "joinOn": [],
                                                                        "optional": true,
                                                                        "defaultExclusiveJoinTask": [],
                                                                        "asyncComplete": false,
                                                                        "loopOver": [],
                                                                        "onStateChange": {}
                                                                    },
                                                                    {
                                                                        "name": "Start Rule Child Workflow HTML Source",
                                                                        "taskReferenceName": "start_rule_child_workflow_html_source_ref",
                                                                        "inputParameters": {
                                                                            "ipa": "${workflow.input.ipa}",
                                                                            "resultURL": "${rule_html_source_json_transform_ref.output.result.destinationUrl}",
                                                                            "rule_name": "${rule_html_source_json_transform_ref.output.result.ruleName}",
                                                                            "root_rule": "${workflow.input.root_rule}",
                                                                            "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                                                            "crawler_save_object": "${workflow.input.crawler_save_object}",
                                                                            "crawler_save_screenshot": "${workflow.input.crawler_save_screenshot}",
                                                                            "save_method": "PUT",
                                                                            "connection_timeout": "${workflow.input.connection_timeout}",
                                                                            "read_timeout": "${workflow.input.read_timeout}",
                                                                            "crawling_mode": "${workflow.input.crawling_mode}",
                                                                            "result_base_url": "${workflow.input.result_base_url}",
                                                                            "crawler_uri": "${workflow.input.crawler_uri}",
                                                                            "rule_base_url": "${workflow.input.rule_base_url}",
                                                                            "force_jsoup": "${workflow.input.force_jsoup}"
                                                                        },
                                                                        "subWorkflowParam": {
                                                                            "name": "rule_detail_child_workflow",
                                                                            "version": 1
                                                                        },
                                                                        "type": "SUB_WORKFLOW",
                                                                        "retryCount": 0
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "defaultCase": [],
                                                    "evaluatorType": "value-param",
                                                    "expression": "exists"
                                                },
                                                {
                                                    "name": "Terminate Rule HTML Source Completed",
                                                    "taskReferenceName": "terminate_rule_html_source_completed_ref",
                                                    "inputParameters": {
                                                        "terminationStatus": "COMPLETED"
                                                    },
                                                    "type": "TERMINATE",
                                                    "decisionCases": {},
                                                    "defaultCase": [],
                                                    "forkTasks": [],
                                                    "startDelay": 0,
                                                    "joinOn": [],
                                                    "optional": false,
                                                    "defaultExclusiveJoinTask": [],
                                                    "asyncComplete": false,
                                                    "loopOver": [],
                                                    "onStateChange": {}
                                                }
                                            ]
                                          }
                                        }
                                    ]
                                },
                                "defaultCase": [],
                                "forkTasks": [],
                                "startDelay": 0,
                                "joinOn": [],
                                "optional": true,
                                "defaultExclusiveJoinTask": [],
                                "asyncComplete": false,
                                "loopOver": [],
                                "evaluatorType": "value-param",
                                "expression": "switchCaseValue",
                                "onStateChange": {}
                            }
                        ],
                        "407": [
                            {
                                "name": "Company JQ HTML Source 407 Failed",
                                "taskReferenceName": "company_jq_html_source_failed_407_ref",
                                "inputParameters": {
                                    "id": "${workflow.input.ipa.idResult}",
                                    "idIpa": "${workflow.input.ipa.id}",
                                    "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                                    "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                                    "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                                    "tipologia": "${workflow.input.ipa.tipologia}",
                                    "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                                    "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                                    "acronimo": "${workflow.input.ipa.acronimo}",
                                    "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                                    "sorgente": "${workflow.input.ipa.sorgente}",
                                    "realUrl": "${crawler_html_source_ref.output.response.body.requestedUrl}",
                                    "objectBucket": "${crawler_html_source_ref.output.response.body.objectBucket}",
                                    "objectId": "${crawler_html_source_ref.output.response.body.objectId}",
                                    "objectResult": "${crawler_html_source_ref.output.response.body.objectResult}",
                                    "screenshotBucket": "${crawler_html_source_ref.output.response.body.screenshotBucket}",
                                    "screenshotId": "${crawler_html_source_ref.output.response.body.screenShotId}",
                                    "screenshotResult": "${crawler_html_source_ref.output.response.body.screenShotResult}",
                                    "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                                    "workflow_child_id": "${workflow.workflowId}",
                                    "error_message": "${crawler_html_source_ref.output.response.body.message}",
                                    "length": "${crawler_html_source_ref.output.response.body.length}",
                                    "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, realUrl: .realUrl, storageData: {objectBucket: .objectBucket, objectId: .objectId, objectResult: .objectResult, screenshotBucket: .screenshotBucket, screenshotId: .screenshotId, screenshotResult: .screenshotResult}, status: 407, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, length: .length, ruleName: .ruleName }",
                                    "ruleName": "${child_rule_ref.output.result}"
                                },
                                "type": "JSON_JQ_TRANSFORM",
                                "decisionCases": {},
                                "defaultCase": [],
                                "forkTasks": [],
                                "startDelay": 0,
                                "joinOn": [],
                                "optional": true,
                                "defaultExclusiveJoinTask": [],
                                "asyncComplete": false,
                                "loopOver": [],
                                "onStateChange": {}
                            },
                            {
                                "name": "Result Rule HTML Source 407 Failed",
                                "taskReferenceName": "result_rule_html_source_407_failed_ref",
                                "inputParameters": {
                                    "http_request": {
                                        "uri": "${workflow.input.result_base_url}/v1/results",
                                        "body": "${company_jq_html_source_failed_407_ref.output.result}",
                                        "method": "PUT",
                                        "connectionTimeOut": 120000,
                                        "readTimeOut": 120000
                                    }
                                },
                                "type": "HTTP_WEBCLIENT",
                                "optional": true,
                                "asyncComplete": false
                            },
                            {
                                "name": "Terminate Rule HTML Source 407Failed",
                                "taskReferenceName": "terminate_rule_html_source_407_failed_ref",
                                "inputParameters": {
                                    "terminationStatus": "COMPLETED"
                                },
                                "type": "TERMINATE",
                                "decisionCases": {},
                                "defaultCase": [],
                                "forkTasks": [],
                                "startDelay": 0,
                                "joinOn": [],
                                "optional": false,
                                "defaultExclusiveJoinTask": [],
                                "asyncComplete": false,
                                "loopOver": [],
                                "onStateChange": {}
                            }
                        ]
                    },
                    "defaultCase": [],
                    "forkTasks": [],
                    "startDelay": 0,
                    "joinOn": [],
                    "optional": true,
                    "defaultExclusiveJoinTask": [],
                    "asyncComplete": false,
                    "loopOver": [],
                    "evaluatorType": "value-param",
                    "expression": "switchCaseValue",
                    "onStateChange": {}
                }
            ],      
            "COMPLETED_WITH_ERRORS": [
                {
                    "name": "Company JQ HTML Source Errors Failed",
                    "taskReferenceName": "company_jq_html_source_error_ref",
                    "inputParameters": {
                        "id": "${workflow.input.ipa.idResult}",
                        "idIpa": "${workflow.input.ipa.id}",
                        "codiceIpa": "${workflow.input.ipa.codiceIpa}",
                        "denominazioneEnte": "${workflow.input.ipa.denominazioneEnte}",
                        "codiceFiscaleEnte": "${workflow.input.ipa.codiceFiscaleEnte}",
                        "tipologia": "${workflow.input.ipa.tipologia}",
                        "codiceCategoria": "${workflow.input.ipa.codiceCategoria}",
                        "codiceNatura": "${workflow.input.ipa.codiceNatura}",
                        "acronimo": "${workflow.input.ipa.acronimo}",
                        "sitoIstituzionale": "${workflow.input.ipa.sitoIstituzionale}",
                        "sorgente": "${workflow.input.ipa.sorgente}",
                        "parent_workflow_id": "${workflow.input.parent_workflow_id}",
                        "workflow_child_id": "${workflow.workflowId}",
                        "error_message": "${crawler_html_source_ref.output.response}",
                        "ruleName": "${child_rule_ref.output.result}",                    
                        "queryExpression": "{id: .id, company: {idIpa: .idIpa, codiceIpa: .codiceIpa, denominazioneEnte: .denominazioneEnte, codiceFiscaleEnte: .codiceFiscaleEnte, tipologia: .tipologia, codiceCategoria: .codiceCategoria, codiceNatura: .codiceNatura, acronimo: .acronimo, sitoIstituzionale: .sitoIstituzionale, sorgente: .sorgente }, status: 407, workflowId: .parent_workflow_id, workflowChildId: .workflow_child_id, errorMessage: .error_message, ruleName: .ruleName }"
                    },
                    "type": "JSON_JQ_TRANSFORM",
                    "decisionCases": {},
                    "defaultCase": [],
                    "forkTasks": [],
                    "startDelay": 0,
                    "joinOn": [],
                    "optional": true,
                    "defaultExclusiveJoinTask": [],
                    "asyncComplete": false,
                    "loopOver": [],
                    "onStateChange": {}
                },
                {
                    "name": "Result Rule HTML Source Error",
                    "taskReferenceName": "result_rule_html_source_error_ref",
                    "inputParameters": {
                        "http_request": {
                            "uri": "${workflow.input.result_base_url}/v1/results",
                            "body": "${company_jq_html_source_error_ref.output.result}",
                            "method": "PUT",
                            "connectionTimeOut": 120000,
                            "readTimeOut": 120000
                        }
                    },
                    "type": "HTTP_WEBCLIENT",
                    "optional": true,
                    "asyncComplete": false
                },
                {
                    "name": "Terminate Rule HTML Source Error",
                    "taskReferenceName": "terminate_rule_html_source_error_ref",
                    "inputParameters": {
                        "terminationStatus": "COMPLETED"
                    },
                    "type": "TERMINATE",
                    "decisionCases": {},
                    "defaultCase": [],
                    "forkTasks": [],
                    "startDelay": 0,
                    "joinOn": [],
                    "optional": false,
                    "defaultExclusiveJoinTask": [],
                    "asyncComplete": false,
                    "loopOver": [],
                    "onStateChange": {}
                }        
            ]
           },
          "defaultCase": [],
          "forkTasks": [],
          "startDelay": 0,
          "joinOn": [],
          "optional": true,
          "defaultExclusiveJoinTask": [],
          "asyncComplete": false,
          "loopOver": [],
          "evaluatorType": "value-param",
          "expression": "switchCaseValue",
          "onStateChange": {}
        }
    ],
    "inputParameters": [
        "ipa",
        "crawler_save_object",
        "crawler_save_screenshot",
        "parent_workflow_id",
        "save_method",
        "base_rule_name",
        "rule_name",
        "root_rule",
        "execute_child",
        "connection_timeout",
        "read_timeout",
        "force_jsoup",
        "crawling_mode",
        "result_base_url",
        "crawler_child_type",
        "crawler_uri",
        "rule_base_url"
    ],
    "outputParameters": {},
    "schemaVersion": 2,
    "restartable": true,
    "workflowStatusListenerEnabled": false,
    "ownerEmail": "marco.spasiano@gmail.com",
    "timeoutPolicy": "ALERT_ONLY",
    "timeoutSeconds": 0,
    "variables": {},
    "inputTemplate": {}
}